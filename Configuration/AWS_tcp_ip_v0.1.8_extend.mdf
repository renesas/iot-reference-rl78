<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
/***********************************************************************************************************************
  Purpose: Module Description File (MDF) Example (Schema Version 2.0)
           This is a description of a sample FIT module configuration file
***********************************************************************************************************************/
-->
<module xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="2.0" xs:noNamespaceSchemaLocation="schema_mdf_2.00.xsd">
    <fileVersion>1.00</fileVersion>
    <formatVersion>2.00</formatVersion>
    <fileTemplate></fileTemplate>
    <function>
        function customFunctionConstraint(arg) {
            var result;
            if ((arg &gt; 4379) &amp;&amp; (arg &lt; 4294967297) &amp;&amp; (arg.search(/\D+/) == -1)) {
            result = true;
                } 
                    else if ((arg.search(/^\*|\.+|\*$/) == -1)  &amp;&amp; ((arg.match(/\*{1}/g)).length == 1)){
                        result = true;
                        var input = arg.split(/\s?\*\s?/);
                        var n = input[0];
                        var m = input [1];
                        arg = n*m;
                            if ((arg &gt; 4379) &amp;&amp; (arg &lt; 4294967297)){
                            result = true;
                                }
                                    else {
                                        result = false;
                                        }
                        }
            else {
                result = false;
                }
        return result;
    }
    </function>
    <configuration>
        <property id="ipconfigHAS_DEBUG_PRINTF" display="Print out the debugging messages" default="0" type="combobox">
            <option id="ipconfigHAS_DEBUG_PRINTF.1" display="Enable " value="1"/>
            <option id="ipconfigHAS_DEBUG_PRINTF.0" display="Disable" value="0"/>
            <description>If ipconfigHAS_DEBUG_PRINTF is set to 1 then FreeRTOS_debug_printf should be defined to the function  used to print out the debugging messages</description>
        </property>
        <property id="ipconfigHAS_PRINTF" display="Print out the  messages" default="1" type="combobox">
            <option id="ipconfigHAS_PRINTF.1" display="Enable " value="1"/>
            <option id="ipconfigHAS_PRINTF.0" display="Disable" value="0"/>
            <description>Set to 1 to print out non debugging messages, for example the output of the  FreeRTOS_netstat() 
command, and ping replies.  If ipconfigHAS_PRINTF is set to 1 then FreeRTOS_printf should be set to the function used to print out the  messages.</description>
        </property>
        <property id="ipconfigBYTE_ORDER" display="Byte order of the target MCU" default="pdFREERTOS_LITTLE_ENDIAN" type="combobox">
            <option id="ipconfigBYTE_ORDER.pdFREERTOS_LITTLE_ENDIAN" display="pdFREERTOS_LITTLE_ENDIAN" value="pdFREERTOS_LITTLE_ENDIAN"/>
            <option id="ipconfigBYTE_ORDER.pdFREERTOS_BIG_ENDIAN" display="pdFREERTOS_BIG_ENDIAN" value="pdFREERTOS_BIG_ENDIAN"/>
            <description>Define the byte order of the target MCU</description>
        </property>
        <property id="ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM" display="IP/TCP/UDP checksums" default="1" type="combobox">
            <option id="ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM.1" display="Enable " value="1"/>
            <option id="ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM.0" display="Disable" value="0"/>
            <description>If the network card/driver includes checksum offloading (IP/TCP/UDP checksums) then set ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM to 1 to prevent the software stack repeating the checksum calculations.</description>
        </property>
        <property id="ipconfigSOCK_DEFAULT_RECEIVE_BLOCK_TIME" display="Block several API for FreeRTOS_recv()" default="10000" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigSOCK_DEFAULT_RECEIVE_BLOCK_TIME}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigSOCK_DEFAULT_RECEIVE_BLOCK_TIME}" &gt;= 1) </constraint>
            <description>Several API's will block until the result is known, or the action has been  performed the timeouts can be  set per socket for FreeRTOS_recv()</description>
        </property>
        <property id="ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME" display="Block several API for FreeRTOS_send()" default="10000" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME}")</constraint>
            <constraint display="Value must be greater than 2">("${ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME}" &gt;= 2) </constraint>
            <description>Several API's will block until the result is known, or the action has been  performed the timeouts can be set per socket for FreeRTOS_send()</description>
        </property>
        <property id="ipconfigUSE_DNS_CACHE" display="DNS caching" default="1" type="combobox">
            <option id="ipconfigUSE_DNS_CACHE.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_DNS_CACHE.0" display="Disable" value="0"/>
            <description>DNS caching</description>
        </property>
        <property id="ipconfigDNS_REQUEST_ATTEMPTS" display="ipconfigDNS_REQUEST_ATTEMPTS can be kept low" default="2" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME}" &gt;= 1) </constraint>
            <description>When a cache is present, ipconfigDNS_REQUEST_ATTEMPTS can be kept low  and also DNS may use small timeouts</description>
        </property>
        <property id="ipconfigIP_TASK_PRIORITY" display="Set the priority of the task for IP stack" default="configMAX_PRIORITIES - 2" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigIP_TASK_PRIORITY}")</constraint>
            <description>Set the priority of the task that executes the IP stack</description>
        </property>
        <property id="ipconfigIP_TASK_STACK_SIZE_WORDS" display="The size in words (not bytes)" default="configMINIMAL_STACK_SIZE * 5" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigIP_TASK_STACK_SIZE_WORDS}")</constraint>
            <description>The size, in words (not bytes), of the stack allocated to the FreeRTOS+TCP stack</description>
        </property>
        <property id="ipconfigUSE_NETWORK_EVENT_HOOK" display="Function is called  when the network connects or disconnects" default="1" type="combobox">
            <option id="ipconfigUSE_NETWORK_EVENT_HOOK.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_NETWORK_EVENT_HOOK.0" display="Disable" value="0"/>
            <description>Function is called  when the network connects or disconnects</description>
        </property>
        <property id="ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS" display="Max send block time" default="5000 / portTICK_PERIOD_MS" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS}")</constraint>
            <description>Max send block time</description>
        </property>
        <property id="ipconfigUSE_DHCP" display="Use DHCP APIs" default="1" type="combobox">
            <option id="ipconfigUSE_DHCP.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_DHCP.0" display="Disable" value="0"/>
            <description>Use DHCP APIs</description>
        </property>
        <property id="ipconfigDHCP_REGISTER_HOSTNAME" display="Use DHCP APIs" default="1" type="combobox">
            <option id="ipconfigDHCP_REGISTER_HOSTNAME.1" display="Enable " value="1"/>
            <option id="ipconfigDHCP_REGISTER_HOSTNAME.0" display="Disable" value="0"/>
            <description>Use DHCP APIs</description>
        </property>
        <property id="ipconfigDHCP_USES_UNICAST" display="Use DHCP APIs" default="1" type="combobox">
            <option id="ipconfigDHCP_USES_UNICAST.1" display="Enable " value="1"/>
            <option id="ipconfigDHCP_USES_UNICAST.0" display="Disable" value="0"/>
            <description>Use DHCP APIs</description>
        </property>
        <property id="ipconfigDHCP_SEND_DISCOVER_AFTER_AUTO_IP" display="Use DHCP APIs" default="0" type="combobox">
            <option id="ipconfigDHCP_SEND_DISCOVER_AFTER_AUTO_IP.1" display="Enable " value="1"/>
            <option id="ipconfigDHCP_SEND_DISCOVER_AFTER_AUTO_IP.0" display="Disable" value="0"/>
            <description>Use DHCP APIs</description>
        </property>
        <property id="ipconfigUSE_DHCP_HOOK" display="DHCP callback function" default="0" type="combobox">
            <option id="ipconfigUSE_DHCP_HOOK.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_DHCP_HOOK.0" display="Disable" value="0"/>
            <description>Provide an implementation of the DHCP callback function</description>
        </property>
        <property id="ipconfigMAXIMUM_DISCOVER_TX_PERIOD" display="Interval between transmissions" default="120000 / portTICK_PERIOD_MS" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigMAXIMUM_DISCOVER_TX_PERIOD}")</constraint>
            <description>The time intervals until either a reply is received from a DHCP server  and accepted, or the interval between transmissions</description>
        </property>
        <property id="ipconfigARP_CACHE_ENTRIES" display="Maximum number of entries t" default="6" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigARP_CACHE_ENTRIES}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigARP_CACHE_ENTRIES}" &gt;= 1) </constraint>
            <description>The maximum number of entries that can exist in the ARP table at any one time</description>
        </property>
        <property id="ipconfigMAX_ARP_RETRANSMISSIONS" display="ARP requests" default="5" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigMAX_ARP_RETRANSMISSIONS}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigMAX_ARP_RETRANSMISSIONS}" &gt;= 1) </constraint>
            <description>ARP requests that do not result in an ARP response will be re-transmitted a maximum of ipconfigMAX_ARP_RETRANSMISSIONS times before the ARP request is aborted.</description>
        </property>
        <property id="ipconfigMAX_ARP_AGE" display="Maximum time between an entry in the ARP table" default="150" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigMAX_ARP_AGE}")</constraint>
            <constraint display="Value must be 1~255">("${ipconfigMAX_ARP_AGE}" &gt;= 1) &amp;&amp; ("${ipconfigMAX_ARP_AGE}" &lt;= 255)</constraint>
            <description>The maximum time between an entry in the ARP table being created or refreshed and the entry being removed because it is stale</description>
        </property>
        <property id="ipconfigINCLUDE_FULL_INET_ADDR" display="Take an IP in decimal dot format" default="0" type="combobox">
            <option id="ipconfigINCLUDE_FULL_INET_ADDR.1" display="Enable " value="1"/>
            <option id="ipconfigINCLUDE_FULL_INET_ADDR.0" display="Disable" value="0"/>
            <description>Take an IP in decimal dot format (for example, "192.168.0.1") as its parameter FreeRTOS_inet_addr_quick() takes an IP address as four separate numerical octets (for example, 192, 168, 0, 1) as its parameters</description>
        </property>
        <property id="ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS" display="Total number of avaiable network buffer" default="ETHER_CFG_EMAC_TX_DESCRIPTORS" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS}")</constraint>
            <description>Define the total number of network buffer that  are available to the IP stack</description>
        </property>
        <property id="ipconfigEVENT_QUEUE_LENGTH" display="Set the maximum number of events" default="ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS + 5" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${ipconfigEVENT_QUEUE_LENGTH}")</constraint>
            <description>Set the maximum number of events that can be queued for processing at any one time.  The event queue must be a minimum of  5 greater than the total number of network buffers</description>
        </property>
        <property id="ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND" display="Calling  FreeRTOS_sendto() on a socket" default="1" type="combobox">
            <option id="ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND.1" display="Enable " value="1"/>
            <option id="ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND.0" display="Disable" value="0"/>
            <description>Set to 1 then calling  FreeRTOS_sendto() on a socket that has not yet been bound will result in the IP stack automatically binding the socket to a port number from the range socketAUTO_PORT_ALLOCATION_START_NUMBER to 0xffff.  If 
 ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND is set to 0 then calling FreeRTOS_sendto() on a socket that has not yet been bound will result in the send operation being  aborted</description>
        </property>
        <property id="ipconfigUDP_TIME_TO_LIVE" display="TTL values for UDP packets" default="128" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigUDP_TIME_TO_LIVE}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigUDP_TIME_TO_LIVE}" &gt;= 1) </constraint>
            <description>Define the Time To Live (TTL) values used in outgoing UDP packets</description>
        </property>
        <property id="ipconfigTCP_TIME_TO_LIVE" display="TTL values for TCP packets" default="128" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigTCP_TIME_TO_LIVE}")</constraint>
            <constraint display="Value must be 1~255">("${ipconfigTCP_TIME_TO_LIVE}" &gt;= 1) &amp;&amp; ("${ipconfigTCP_TIME_TO_LIVE}" &lt;= 255)</constraint>
            <description>Defines the Time To Live (TTL) values used in outgoing TCP packets</description>
        </property>
        <property id="ipconfigUSE_TCP" display="Use TCP and all its features" default="1" type="combobox">
            <option id="ipconfigUSE_TCP.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_TCP.0" display="Disable" value="0"/>
            <description>Use TCP and all its features</description>
        </property>
        <property id="ipconfigUSE_TCP_WIN" display="Let TCP use windowing mechanism" default="0" type="combobox">
            <option id="ipconfigUSE_TCP_WIN.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_TCP_WIN.0" display="Disable" value="0"/>
            <description>Let TCP use windowing mechanism</description>
        </property>
        <property id="ipconfigNETWORK_MTU" display="Maximum number of bytes the payload of a network frame can contain" default="1500" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigNETWORK_MTU}")</constraint>
            <constraint display="Value must be in the range 1 ~1500">("${ipconfigNETWORK_MTU}" &gt;= 1) &amp;&amp; ("${ipconfigNETWORK_MTU}" &lt;= 1500)</constraint>
            <description>Maximum number of bytes the payload of a network frame can contain</description>
        </property>
        <property id="ipconfigUSE_DNS" display="Basic DNS client or resolver" default="1" type="combobox">
            <option id="ipconfigUSE_DNS.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_DNS.0" display="Disable" value="0"/>
            <description>Set ipconfigUSE_DNS to 1 to include a basic DNS client/resolver.  DNS is used through the FreeRTOS_gethostbyname() API function</description>
        </property>
        <property id="ipconfigREPLY_TO_INCOMING_PINGS" display="Replie to incoming ICMP echo (ping) requests" default="1" type="combobox">
            <option id="ipconfigREPLY_TO_INCOMING_PINGS.1" display="Enable " value="1"/>
            <option id="ipconfigREPLY_TO_INCOMING_PINGS.0" display="Disable" value="0"/>
            <description>If ipconfigREPLY_TO_INCOMING_PINGS is set to 1 then the IP stack will generate replies to incoming ICMP echo (ping) requests</description>
        </property>
        <property id="ipconfigSUPPORT_OUTGOING_PINGS" display="FreeRTOS_SendPingRequest() is available" default="0" type="combobox">
            <option id="ipconfigSUPPORT_OUTGOING_PINGS.1" display="Enable " value="1"/>
            <option id="ipconfigSUPPORT_OUTGOING_PINGS.0" display="Disable" value="0"/>
            <description>If ipconfigSUPPORT_OUTGOING_PINGS is set to 1 then the  FreeRTOS_SendPingRequest() API function is available</description>
        </property>
        <property id="ipconfigSUPPORT_SELECT_FUNCTION" display="FreeRTOS_select()  (and associated) API function is available" default="0" type="combobox">
            <option id="ipconfigSUPPORT_SELECT_FUNCTION.1" display="Enable " value="1"/>
            <option id="ipconfigSUPPORT_SELECT_FUNCTION.0" display="Disable" value="0"/>
            <description>If ipconfigSUPPORT_SELECT_FUNCTION is set to 1 then the FreeRTOS_select()  (and associated) API function is available</description>
        </property>
        <property id="ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES" display="Ethernet frames dropped." default="1" type="combobox">
            <option id="ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES.1" display="Enable " value="1"/>
            <option id="ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES.0" display="Disable" value="0"/>
            <description>If ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES is set to 1 then Ethernet frames  that are not in Ethernet II format will be dropped. This option is included for potential future IP stack developments</description>
        </property>
        <property id="ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES" display="Responsibility of the Ethernet interface to filter out packets" default="0" type="combobox">
            <option id="ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES.1" display="Enable " value="1"/>
            <option id="ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES.0" display="Disable" value="0"/>
            <description>If ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES is set to 1 then it is the  responsibility of the Ethernet interface to filter out packets that are of no interest</description>
        </property>
        <property id="configWINDOWS_MAC_INTERRUPT_SIMULATOR_DELAY" display="The windows simulator cannot really simulate MAC interrupts" default="20 / portTICK_PERIOD_MS" type="textbox">
            <constraint display="Please enter a valid function name without spaces or funny characters">testExists("${configWINDOWS_MAC_INTERRUPT_SIMULATOR_DELAY}")</constraint>
            <description>The windows simulator cannot really simulate MAC interrupts, and needs to block occasionally to allow other tasks to run</description>
        </property>
        <property id="ipconfigPACKET_FILLER_SIZE" display="Access 32-bit fields in the IP packets" default="2" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigNETWORK_MTU}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigNETWORK_MTU}" &gt;= 1) </constraint>
            <description>To access 32-bit fields in the IP packets with  32-bit memory instructions, all packets will be stored 32-bit-aligned,  plus 16-bits. This has to do with the contents of the IP-packets: all  32-bit fields are 32-bit-aligned, plus 16-bit</description>
        </property>
        <property id="ipconfigTCP_WIN_SEG_COUNT" display="Size of the pool of TCP window descriptors" default="240" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigTCP_WIN_SEG_COUNT}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigTCP_WIN_SEG_COUNT}" &gt;= 1) </constraint>
            <description>Define the size of the pool of TCP window descriptors</description>
        </property>
        <property id="ipconfigTCP_RX_BUFFER_LENGTH" display="Size of Rx buffer for TCP sockets" default="1460 * 3" type="textbox">
            <constraint display="Illegal Input"> customFunctionConstraint("${ipconfigTCP_RX_BUFFER_LENGTH}") </constraint>
            <description>Define the size of Rx buffer for TCP sockets</description>
        </property>
        <property id="ipconfigTCP_TX_BUFFER_LENGTH" display="Size of Tx buffer for TCP sockets" default="1460 * 3" type="textbox">
            <constraint display="Illegal Input"> customFunctionConstraint("${ipconfigTCP_TX_BUFFER_LENGTH}") </constraint>
            <description>Define the size of Tx buffer for TCP sockets</description>
        </property>
        <property id="ipconfigTCP_KEEP_ALIVE" display="TCP keep-alive" default="1" type="combobox">
            <option id="ipconfigTCP_KEEP_ALIVE.1" display="Enable " value="1"/>
            <option id="ipconfigTCP_KEEP_ALIVE.0" display="Disable" value="0"/>
            <description>TCP keep-alive is avaiable or not</description>
        </property>
        <property id="ipconfigTCP_KEEP_ALIVE_INTERVAL" display="TCP keep-alive interval" default="20" type="textbox">
            <constraint display="Value must be an integer">testInteger("${ipconfigTCP_KEEP_ALIVE_INTERVAL}")</constraint>
            <constraint display="Value must be greater than 1">("${ipconfigTCP_KEEP_ALIVE_INTERVAL}" &gt;= 1) </constraint>
            <description>TCP keep-alive interval in second</description>
        </property>
        <property id="ipconfigSOCKET_HAS_USER_SEMAPHORE" display="The socket semaphore to unblock the MQTT task (USER_SEMAPHORE)" default="0" type="combobox">
            <option id="ipconfigSOCKET_HAS_USER_SEMAPHORE.1" display="Enable " value="1"/>
            <option id="ipconfigSOCKET_HAS_USER_SEMAPHORE.0" display="Disable" value="0"/>
            <description>The socket semaphore is used to unblock the MQTT task</description>
        </property>
        <property id="ipconfigSOCKET_HAS_USER_WAKE_CALLBACK" display="The socket semaphore to unblock the MQTT task (WAKE_CALLBACK)" default="1" type="combobox">
            <option id="ipconfigSOCKET_HAS_USER_WAKE_CALLBACK.1" display="Enable " value="1"/>
            <option id="ipconfigSOCKET_HAS_USER_WAKE_CALLBACK.0" display="Disable" value="0"/>
            <description>The socket semaphore is used to unblock the MQTT task</description>
        </property>
        <property id="ipconfigUSE_CALLBACKS" display="The socket semaphore  to unblock the MQTT task (USE_CALLBACKS)" default="0" type="combobox">
            <option id="ipconfigUSE_CALLBACKS.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_CALLBACKS.0" display="Disable" value="0"/>
            <description>The socket semaphore is used to unblock the MQTT task</description>
        </property>
        <property id="ipconfigZERO_COPY_TX_DRIVER" display="The socket semaphore to unblock the MQTT task (TX_DRIVER)" default="0" type="combobox">
            <option id="ipconfigZERO_COPY_TX_DRIVER.1" display="Enable " value="1"/>
            <option id="ipconfigZERO_COPY_TX_DRIVER.0" display="Disable" value="0"/>
            <description>The socket semaphore is used to unblock the MQTT task</description>
        </property>
        <property id="ipconfigZERO_COPY_RX_DRIVER" display="The socket semaphore to unblock the MQTT task (RX_DRIVER)" default="0" type="combobox">
            <option id="ipconfigZERO_COPY_RX_DRIVER.1" display="Enable " value="1"/>
            <option id="ipconfigZERO_COPY_RX_DRIVER.0" display="Disable" value="0"/>
            <description>The socket semaphore is used to unblock the MQTT task</description>
        </property>
        <property id="ipconfigUSE_LINKED_RX_MESSAGES" display="Possible optimisation for expert users" default="0" type="combobox">
            <option id="ipconfigUSE_LINKED_RX_MESSAGES.1" display="Enable " value="1"/>
            <option id="ipconfigUSE_LINKED_RX_MESSAGES.0" display="Disable" value="0"/>
            <description>Possible optimisation for expert users - requires network driver support. It is is useful when there is high network traffic. If non-zero value then instead of passing received packets into the IP task one at a time the network interface can chain received packets together and pass them into the IP task in one go. If set to 0 then only one buffer will be sent at a time.</description>
        </property>
    </configuration>
</module>
