/***********************************************************************************************************************
* DISCLAIMER
* This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No 
* other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all 
* applicable laws, including copyright laws. 
* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, 
* FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM 
* EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES 
* SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS 
* SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
* Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of 
* this software. By using this software, you agree to the additional terms and conditions found by accessing the 
* following link:
* http://www.renesas.com/disclaimer
*
* Copyright (C) 2021 Renesas Electronics Corporation. All rights reserved.
***********************************************************************************************************************/
/***********************************************************************************************************************
* File Name    : iodefine.h
* Description  : 
***********************************************************************************************************************/
/***********************************************************************************************************************
* History : DD.MM.YYYY Version  Description
*         : 08.03.2021 1.00     First Release

***********************************************************************************************************************/
#ifndef __R7F100GIODEFINE_HEADER__
#define __R7F100GIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define ADM2         (*(volatile __near unsigned char  *)0x10)
#define ADM2_bit     (*(volatile __near __bitf_T *)0x10)
#define ADTYP0       (((volatile __near __bitf_T *)0x10)->no0)
#define ADTYP1       (((volatile __near __bitf_T *)0x10)->no1)
#define AWC          (((volatile __near __bitf_T *)0x10)->no2)
#define ADRCK        (((volatile __near __bitf_T *)0x10)->no3)
#define ADUL         (*(volatile __near unsigned char  *)0x11)
#define ADLL         (*(volatile __near unsigned char  *)0x12)
#define ADTES        (*(volatile __near unsigned char  *)0x13)
#define ADCR0        (*(volatile __near unsigned short *)0x20)
#define ADCR0H       (*(volatile __near unsigned char  *)0x21)
#define ADCR1        (*(volatile __near unsigned short *)0x22)
#define ADCR1H       (*(volatile __near unsigned char  *)0x23)
#define ADCR2        (*(volatile __near unsigned short *)0x24)
#define ADCR2H       (*(volatile __near unsigned char  *)0x25)
#define ADCR3        (*(volatile __near unsigned short *)0x26)
#define ADCR3H       (*(volatile __near unsigned char  *)0x27)
#define PU0          (*(volatile __near unsigned char  *)0x30)
#define PU0_bit      (*(volatile __near __bitf_T *)0x30)
#define PU1          (*(volatile __near unsigned char  *)0x31)
#define PU1_bit      (*(volatile __near __bitf_T *)0x31)
#define PU3          (*(volatile __near unsigned char  *)0x33)
#define PU3_bit      (*(volatile __near __bitf_T *)0x33)
#define PU4          (*(volatile __near unsigned char  *)0x34)
#define PU4_bit      (*(volatile __near __bitf_T *)0x34)
#define PU5          (*(volatile __near unsigned char  *)0x35)
#define PU5_bit      (*(volatile __near __bitf_T *)0x35)
#define PU6          (*(volatile __near unsigned char  *)0x36)
#define PU6_bit      (*(volatile __near __bitf_T *)0x36)
#define PU7          (*(volatile __near unsigned char  *)0x37)
#define PU7_bit      (*(volatile __near __bitf_T *)0x37)
#define PU8          (*(volatile __near unsigned char  *)0x38)
#define PU8_bit      (*(volatile __near __bitf_T *)0x38)
#define PU9          (*(volatile __near unsigned char  *)0x39)
#define PU9_bit      (*(volatile __near __bitf_T *)0x39)
#define PU10         (*(volatile __near unsigned char  *)0x3A)
#define PU10_bit     (*(volatile __near __bitf_T *)0x3A)
#define PU11         (*(volatile __near unsigned char  *)0x3B)
#define PU11_bit     (*(volatile __near __bitf_T *)0x3B)
#define PU12         (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit     (*(volatile __near __bitf_T *)0x3C)
#define PU14         (*(volatile __near unsigned char  *)0x3E)
#define PU14_bit     (*(volatile __near __bitf_T *)0x3E)
#define PIM0         (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit     (*(volatile __near __bitf_T *)0x40)
#define PIM1         (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit     (*(volatile __near __bitf_T *)0x41)
#define PIM3         (*(volatile __near unsigned char  *)0x43)
#define PIM3_bit     (*(volatile __near __bitf_T *)0x43)
#define PIM4         (*(volatile __near unsigned char  *)0x44)
#define PIM4_bit     (*(volatile __near __bitf_T *)0x44)
#define PIM5         (*(volatile __near unsigned char  *)0x45)
#define PIM5_bit     (*(volatile __near __bitf_T *)0x45)
#define PIM7         (*(volatile __near unsigned char  *)0x47)
#define PIM7_bit     (*(volatile __near __bitf_T *)0x47)
#define PIM8         (*(volatile __near unsigned char  *)0x48)
#define PIM8_bit     (*(volatile __near __bitf_T *)0x48)
#define PIM14        (*(volatile __near unsigned char  *)0x4E)
#define PIM14_bit    (*(volatile __near __bitf_T *)0x4E)
#define POM0         (*(volatile __near unsigned char  *)0x50)
#define POM0_bit     (*(volatile __near __bitf_T *)0x50)
#define POM1         (*(volatile __near unsigned char  *)0x51)
#define POM1_bit     (*(volatile __near __bitf_T *)0x51)
#define POM3         (*(volatile __near unsigned char  *)0x53)
#define POM3_bit     (*(volatile __near __bitf_T *)0x53)
#define POM4         (*(volatile __near unsigned char  *)0x54)
#define POM4_bit     (*(volatile __near __bitf_T *)0x54)
#define POM5         (*(volatile __near unsigned char  *)0x55)
#define POM5_bit     (*(volatile __near __bitf_T *)0x55)
#define POM7         (*(volatile __near unsigned char  *)0x57)
#define POM7_bit     (*(volatile __near __bitf_T *)0x57)
#define POM8         (*(volatile __near unsigned char  *)0x58)
#define POM8_bit     (*(volatile __near __bitf_T *)0x58)
#define POM9         (*(volatile __near unsigned char  *)0x59)
#define POM9_bit     (*(volatile __near __bitf_T *)0x59)
#define POM12        (*(volatile __near unsigned char  *)0x5C)
#define POM12_bit    (*(volatile __near __bitf_T *)0x5C)
#define POM14        (*(volatile __near unsigned char  *)0x5E)
#define POM14_bit    (*(volatile __near __bitf_T *)0x5E)
#define PMCA0        (*(volatile __near unsigned char  *)0x60)
#define PMCA0_bit    (*(volatile __near __bitf_T *)0x60)
#define PMCA1        (*(volatile __near unsigned char  *)0x61)
#define PMCA1_bit    (*(volatile __near __bitf_T *)0x61)
#define PMCA2        (*(volatile __near unsigned char  *)0x62)
#define PMCA2_bit    (*(volatile __near __bitf_T *)0x62)
#define PMCA3        (*(volatile __near unsigned char  *)0x63)
#define PMCA3_bit    (*(volatile __near __bitf_T *)0x63)
#define PMCA10       (*(volatile __near unsigned char  *)0x6A)
#define PMCA10_bit   (*(volatile __near __bitf_T *)0x6A)
#define PMCA11       (*(volatile __near unsigned char  *)0x6B)
#define PMCA11_bit   (*(volatile __near __bitf_T *)0x6B)
#define PMCA12       (*(volatile __near unsigned char  *)0x6C)
#define PMCA12_bit   (*(volatile __near __bitf_T *)0x6C)
#define PMCA14       (*(volatile __near unsigned char  *)0x6E)
#define PMCA14_bit   (*(volatile __near __bitf_T *)0x6E)
#define PMCA15       (*(volatile __near unsigned char  *)0x6F)
#define PMCA15_bit   (*(volatile __near __bitf_T *)0x6F)
#define NFEN0        (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit    (*(volatile __near __bitf_T *)0x70)
#define NFEN1        (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit    (*(volatile __near __bitf_T *)0x71)
#define NFEN2        (*(volatile __near unsigned char  *)0x72)
#define NFEN2_bit    (*(volatile __near __bitf_T *)0x72)
#define ISC          (*(volatile __near unsigned char  *)0x73)
#define ISC_bit      (*(volatile __near __bitf_T *)0x73)
#define TIS0         (*(volatile __near unsigned char  *)0x74)
#define TIS1         (*(volatile __near unsigned char  *)0x75)
#define PIOR         (*(volatile __near unsigned char  *)0x77)
#define IAWCTL       (*(volatile __near unsigned char  *)0x78)
#define ULBS         (*(volatile __near unsigned char  *)0x79)
#define ULBS_bit     (*(volatile __near __bitf_T *)0x79)
#define ULBS0        (((volatile __near __bitf_T *)0x79)->no0)
#define ULBS1        (((volatile __near __bitf_T *)0x79)->no1)
#define ULBS2        (((volatile __near __bitf_T *)0x79)->no2)
#define ULBS3        (((volatile __near __bitf_T *)0x79)->no3)
#define ULBS4        (((volatile __near __bitf_T *)0x79)->no4)
#define ULBS5        (((volatile __near __bitf_T *)0x79)->no5)
#define PMS          (*(volatile __near unsigned char  *)0x7B)
#define PMS_bit      (*(volatile __near __bitf_T *)0x7B)
#define GDIDIS       (*(volatile __near unsigned char  *)0x7D)
#define GDIDIS_bit   (*(volatile __near __bitf_T *)0x7D)
#define DFLCTL       (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit   (*(volatile __near __bitf_T *)0x90)
#define DFLEN        (((volatile __near __bitf_T *)0x90)->no0)
#define HIOTRM       (*(volatile __near unsigned char  *)0xA0)
#define HOCODIV      (*(volatile __near unsigned char  *)0xA8)
#define FLMODE       (*(volatile __near unsigned char  *)0xAA)
#define FLMODE_bit   (*(volatile __near __bitf_T *)0xAA)
#define MODE0        (((volatile __near __bitf_T *)0xAA)->no6)
#define MODE1        (((volatile __near __bitf_T *)0xAA)->no7)
#define FLMWRP       (*(volatile __near unsigned char  *)0xAB)
#define FLMWRP_bit   (*(volatile __near __bitf_T *)0xAB)
#define FLMWEN       (((volatile __near __bitf_T *)0xAB)->no0)
#define FLSEC        (*(volatile __near unsigned short *)0xB0)
#define FLFSWS       (*(volatile __near unsigned short *)0xB2)
#define FLFSWE       (*(volatile __near unsigned short *)0xB4)
#define FSSET        (*(volatile __near unsigned char  *)0xB6)
#define FSSE         (*(volatile __near unsigned char  *)0xB7)
#define FSSE_bit     (*(volatile __near __bitf_T *)0xB7)
#define ESQST        (((volatile __near __bitf_T *)0xB7)->no7)
#define FLFADL       (*(volatile __near unsigned short *)0xB8)
#define FLFADH       (*(volatile __near unsigned char  *)0xBA)
#define PFCMD        (*(volatile __near unsigned char  *)0xC0)
#define PFS          (*(volatile __near unsigned char  *)0xC1)
#define PFS_bit      (*(volatile __near __bitf_T *)0xC1)
#define FLWE         (*(volatile __near unsigned char  *)0xC6)
#define PER0         (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit     (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN       (((volatile __near __bitf_T *)0xF0)->no0)
#define TAU1EN       (((volatile __near __bitf_T *)0xF0)->no1)
#define SAU0EN       (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU1EN       (((volatile __near __bitf_T *)0xF0)->no3)
#define IICA0EN      (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN        (((volatile __near __bitf_T *)0xF0)->no5)
#define IICA1EN      (((volatile __near __bitf_T *)0xF0)->no6)
#define RTCWEN       (((volatile __near __bitf_T *)0xF0)->no7)
#define PRR0         (*(volatile __near unsigned char  *)0xF1)
#define PRR0_bit     (*(volatile __near __bitf_T *)0xF1)
#define TAU0RES      (((volatile __near __bitf_T *)0xF1)->no0)
#define TAU1RES      (((volatile __near __bitf_T *)0xF1)->no1)
#define SAU0RES      (((volatile __near __bitf_T *)0xF1)->no2)
#define SAU1RES      (((volatile __near __bitf_T *)0xF1)->no3)
#define IICA0RES     (((volatile __near __bitf_T *)0xF1)->no4)
#define ADCRES       (((volatile __near __bitf_T *)0xF1)->no5)
#define IICA1RES     (((volatile __near __bitf_T *)0xF1)->no6)
#define MOCODIV      (*(volatile __near unsigned char  *)0xF2)
#define OSMC         (*(volatile __near unsigned char  *)0xF3)
#define OSMC_bit     (*(volatile __near __bitf_T *)0xF3)
#define HIPREC       (((volatile __near __bitf_T *)0xF3)->no0)
#define WUTMMCK0     (((volatile __near __bitf_T *)0xF3)->no4)
#define RTCLPC       (((volatile __near __bitf_T *)0xF3)->no7)
#define RPECTL       (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit   (*(volatile __near __bitf_T *)0xF5)
#define RPEF         (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS      (((volatile __near __bitf_T *)0xF5)->no7)
#define PORSR        (*(volatile __near unsigned char  *)0xF9)
#define PORSR_bit    (*(volatile __near __bitf_T *)0xF9)
#define PORF         (((volatile __near __bitf_T *)0xF9)->no0)
#define PER1         (*(volatile __near unsigned char  *)0xFA)
#define PER1_bit     (*(volatile __near __bitf_T *)0xFA)
#define CTSUEN       (((volatile __near __bitf_T *)0xFA)->no0)
#define REMCEN       (((volatile __near __bitf_T *)0xFA)->no1)
#define UTAEN        (((volatile __near __bitf_T *)0xFA)->no2)
#define DTCEN        (((volatile __near __bitf_T *)0xFA)->no3)
#define TML32EN      (((volatile __near __bitf_T *)0xFA)->no4)
#define CMPEN        (((volatile __near __bitf_T *)0xFA)->no5)
#define SMSEN        (((volatile __near __bitf_T *)0xFA)->no6)
#define DACEN        (((volatile __near __bitf_T *)0xFA)->no7)
#define PRR1         (*(volatile __near unsigned char  *)0xFB)
#define PRR1_bit     (*(volatile __near __bitf_T *)0xFB)
#define CTSURES      (((volatile __near __bitf_T *)0xFB)->no0)
#define REMCRES      (((volatile __near __bitf_T *)0xFB)->no1)
#define TML32RES     (((volatile __near __bitf_T *)0xFB)->no4)
#define CMPRES       (((volatile __near __bitf_T *)0xFB)->no5)
#define SMSRES       (((volatile __near __bitf_T *)0xFB)->no6)
#define DACRES       (((volatile __near __bitf_T *)0xFB)->no7)
#define BCDADJ       (*(volatile __near unsigned char  *)0xFE)
#define VECTCTRL     (*(volatile __near unsigned char  *)0xFF)
#define SSR00        (*(volatile __near unsigned short *)0x100)
#define SSR00L       (*(volatile __near unsigned char  *)0x100)
#define SSR01        (*(volatile __near unsigned short *)0x102)
#define SSR01L       (*(volatile __near unsigned char  *)0x102)
#define SSR02        (*(volatile __near unsigned short *)0x104)
#define SSR02L       (*(volatile __near unsigned char  *)0x104)
#define SSR03        (*(volatile __near unsigned short *)0x106)
#define SSR03L       (*(volatile __near unsigned char  *)0x106)
#define SIR00        (*(volatile __near unsigned short *)0x108)
#define SIR00L       (*(volatile __near unsigned char  *)0x108)
#define SIR01        (*(volatile __near unsigned short *)0x10A)
#define SIR01L       (*(volatile __near unsigned char  *)0x10A)
#define SIR02        (*(volatile __near unsigned short *)0x10C)
#define SIR02L       (*(volatile __near unsigned char  *)0x10C)
#define SIR03        (*(volatile __near unsigned short *)0x10E)
#define SIR03L       (*(volatile __near unsigned char  *)0x10E)
#define SMR00        (*(volatile __near unsigned short *)0x110)
#define SMR01        (*(volatile __near unsigned short *)0x112)
#define SMR02        (*(volatile __near unsigned short *)0x114)
#define SMR03        (*(volatile __near unsigned short *)0x116)
#define SCR00        (*(volatile __near unsigned short *)0x118)
#define SCR01        (*(volatile __near unsigned short *)0x11A)
#define SCR02        (*(volatile __near unsigned short *)0x11C)
#define SCR03        (*(volatile __near unsigned short *)0x11E)
#define SE0          (*(volatile __near unsigned short *)0x120)
#define SE0L         (*(volatile __near unsigned char  *)0x120)
#define SE0L_bit     (*(volatile __near __bitf_T *)0x120)
#define SS0          (*(volatile __near unsigned short *)0x122)
#define SS0L         (*(volatile __near unsigned char  *)0x122)
#define SS0L_bit     (*(volatile __near __bitf_T *)0x122)
#define ST0          (*(volatile __near unsigned short *)0x124)
#define ST0L         (*(volatile __near unsigned char  *)0x124)
#define ST0L_bit     (*(volatile __near __bitf_T *)0x124)
#define SPS0         (*(volatile __near unsigned short *)0x126)
#define SPS0L        (*(volatile __near unsigned char  *)0x126)
#define SO0          (*(volatile __near unsigned short *)0x128)
#define SOE0         (*(volatile __near unsigned short *)0x12A)
#define SOE0L        (*(volatile __near unsigned char  *)0x12A)
#define SOE0L_bit    (*(volatile __near __bitf_T *)0x12A)
#define SOL0         (*(volatile __near unsigned short *)0x134)
#define SOL0L        (*(volatile __near unsigned char  *)0x134)
#define SSC0         (*(volatile __near unsigned short *)0x138)
#define SSC0L        (*(volatile __near unsigned char  *)0x138)
#define SSR10        (*(volatile __near unsigned short *)0x140)
#define SSR10L       (*(volatile __near unsigned char  *)0x140)
#define SSR11        (*(volatile __near unsigned short *)0x142)
#define SSR11L       (*(volatile __near unsigned char  *)0x142)
#define SSR12        (*(volatile __near unsigned short *)0x144)
#define SSR12L       (*(volatile __near unsigned char  *)0x144)
#define SSR13        (*(volatile __near unsigned short *)0x146)
#define SSR13L       (*(volatile __near unsigned char  *)0x146)
#define SIR10        (*(volatile __near unsigned short *)0x148)
#define SIR10L       (*(volatile __near unsigned char  *)0x148)
#define SIR11        (*(volatile __near unsigned short *)0x14A)
#define SIR11L       (*(volatile __near unsigned char  *)0x14A)
#define SIR12        (*(volatile __near unsigned short *)0x14C)
#define SIR12L       (*(volatile __near unsigned char  *)0x14C)
#define SIR13        (*(volatile __near unsigned short *)0x14E)
#define SIR13L       (*(volatile __near unsigned char  *)0x14E)
#define SMR10        (*(volatile __near unsigned short *)0x150)
#define SMR11        (*(volatile __near unsigned short *)0x152)
#define SMR12        (*(volatile __near unsigned short *)0x154)
#define SMR13        (*(volatile __near unsigned short *)0x156)
#define SCR10        (*(volatile __near unsigned short *)0x158)
#define SCR11        (*(volatile __near unsigned short *)0x15A)
#define SCR12        (*(volatile __near unsigned short *)0x15C)
#define SCR13        (*(volatile __near unsigned short *)0x15E)
#define SE1          (*(volatile __near unsigned short *)0x160)
#define SE1L         (*(volatile __near unsigned char  *)0x160)
#define SE1L_bit     (*(volatile __near __bitf_T *)0x160)
#define SS1          (*(volatile __near unsigned short *)0x162)
#define SS1L         (*(volatile __near unsigned char  *)0x162)
#define SS1L_bit     (*(volatile __near __bitf_T *)0x162)
#define ST1          (*(volatile __near unsigned short *)0x164)
#define ST1L         (*(volatile __near unsigned char  *)0x164)
#define ST1L_bit     (*(volatile __near __bitf_T *)0x164)
#define SPS1         (*(volatile __near unsigned short *)0x166)
#define SPS1L        (*(volatile __near unsigned char  *)0x166)
#define SO1          (*(volatile __near unsigned short *)0x168)
#define SOE1         (*(volatile __near unsigned short *)0x16A)
#define SOE1L        (*(volatile __near unsigned char  *)0x16A)
#define SOE1L_bit    (*(volatile __near __bitf_T *)0x16A)
#define SOL1         (*(volatile __near unsigned short *)0x174)
#define SOL1L        (*(volatile __near unsigned char  *)0x174)
#define SSC1         (*(volatile __near unsigned short *)0x178)
#define SSC1L        (*(volatile __near unsigned char  *)0x178)
#define TCR00        (*(volatile __near unsigned short *)0x180)
#define TCR01        (*(volatile __near unsigned short *)0x182)
#define TCR02        (*(volatile __near unsigned short *)0x184)
#define TCR03        (*(volatile __near unsigned short *)0x186)
#define TCR04        (*(volatile __near unsigned short *)0x188)
#define TCR05        (*(volatile __near unsigned short *)0x18A)
#define TCR06        (*(volatile __near unsigned short *)0x18C)
#define TCR07        (*(volatile __near unsigned short *)0x18E)
#define TMR00        (*(volatile __near unsigned short *)0x190)
#define TMR01        (*(volatile __near unsigned short *)0x192)
#define TMR02        (*(volatile __near unsigned short *)0x194)
#define TMR03        (*(volatile __near unsigned short *)0x196)
#define TMR04        (*(volatile __near unsigned short *)0x198)
#define TMR05        (*(volatile __near unsigned short *)0x19A)
#define TMR06        (*(volatile __near unsigned short *)0x19C)
#define TMR07        (*(volatile __near unsigned short *)0x19E)
#define TSR00        (*(volatile __near unsigned short *)0x1A0)
#define TSR00L       (*(volatile __near unsigned char  *)0x1A0)
#define TSR01        (*(volatile __near unsigned short *)0x1A2)
#define TSR01L       (*(volatile __near unsigned char  *)0x1A2)
#define TSR02        (*(volatile __near unsigned short *)0x1A4)
#define TSR02L       (*(volatile __near unsigned char  *)0x1A4)
#define TSR03        (*(volatile __near unsigned short *)0x1A6)
#define TSR03L       (*(volatile __near unsigned char  *)0x1A6)
#define TSR04        (*(volatile __near unsigned short *)0x1A8)
#define TSR04L       (*(volatile __near unsigned char  *)0x1A8)
#define TSR05        (*(volatile __near unsigned short *)0x1AA)
#define TSR05L       (*(volatile __near unsigned char  *)0x1AA)
#define TSR06        (*(volatile __near unsigned short *)0x1AC)
#define TSR06L       (*(volatile __near unsigned char  *)0x1AC)
#define TSR07        (*(volatile __near unsigned short *)0x1AE)
#define TSR07L       (*(volatile __near unsigned char  *)0x1AE)
#define TE0          (*(volatile __near unsigned short *)0x1B0)
#define TE0L         (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit     (*(volatile __near __bitf_T *)0x1B0)
#define TS0          (*(volatile __near unsigned short *)0x1B2)
#define TS0L         (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit     (*(volatile __near __bitf_T *)0x1B2)
#define TT0          (*(volatile __near unsigned short *)0x1B4)
#define TT0L         (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit     (*(volatile __near __bitf_T *)0x1B4)
#define TPS0         (*(volatile __near unsigned short *)0x1B6)
#define TO0          (*(volatile __near unsigned short *)0x1B8)
#define TO0L         (*(volatile __near unsigned char  *)0x1B8)
#define TOE0         (*(volatile __near unsigned short *)0x1BA)
#define TOE0L        (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit    (*(volatile __near __bitf_T *)0x1BA)
#define TOL0         (*(volatile __near unsigned short *)0x1BC)
#define TOL0L        (*(volatile __near unsigned char  *)0x1BC)
#define TOM0         (*(volatile __near unsigned short *)0x1BE)
#define TOM0L        (*(volatile __near unsigned char  *)0x1BE)
#define TCR10        (*(volatile __near unsigned short *)0x1C0)
#define TCR11        (*(volatile __near unsigned short *)0x1C2)
#define TCR12        (*(volatile __near unsigned short *)0x1C4)
#define TCR13        (*(volatile __near unsigned short *)0x1C6)
#define TCR14        (*(volatile __near unsigned short *)0x1C8)
#define TCR15        (*(volatile __near unsigned short *)0x1CA)
#define TCR16        (*(volatile __near unsigned short *)0x1CC)
#define TCR17        (*(volatile __near unsigned short *)0x1CE)
#define TMR10        (*(volatile __near unsigned short *)0x1D0)
#define TMR11        (*(volatile __near unsigned short *)0x1D2)
#define TMR12        (*(volatile __near unsigned short *)0x1D4)
#define TMR13        (*(volatile __near unsigned short *)0x1D6)
#define TMR14        (*(volatile __near unsigned short *)0x1D8)
#define TMR15        (*(volatile __near unsigned short *)0x1DA)
#define TMR16        (*(volatile __near unsigned short *)0x1DC)
#define TMR17        (*(volatile __near unsigned short *)0x1DE)
#define TSR10        (*(volatile __near unsigned short *)0x1E0)
#define TSR10L       (*(volatile __near unsigned char  *)0x1E0)
#define TSR11        (*(volatile __near unsigned short *)0x1E2)
#define TSR11L       (*(volatile __near unsigned char  *)0x1E2)
#define TSR12        (*(volatile __near unsigned short *)0x1E4)
#define TSR12L       (*(volatile __near unsigned char  *)0x1E4)
#define TSR13        (*(volatile __near unsigned short *)0x1E6)
#define TSR13L       (*(volatile __near unsigned char  *)0x1E6)
#define TSR14        (*(volatile __near unsigned short *)0x1E8)
#define TSR14L       (*(volatile __near unsigned char  *)0x1E8)
#define TSR15        (*(volatile __near unsigned short *)0x1EA)
#define TSR15L       (*(volatile __near unsigned char  *)0x1EA)
#define TSR16        (*(volatile __near unsigned short *)0x1EC)
#define TSR16L       (*(volatile __near unsigned char  *)0x1EC)
#define TSR17        (*(volatile __near unsigned short *)0x1EE)
#define TSR17L       (*(volatile __near unsigned char  *)0x1EE)
#define TE1          (*(volatile __near unsigned short *)0x1F0)
#define TE1L         (*(volatile __near unsigned char  *)0x1F0)
#define TE1L_bit     (*(volatile __near __bitf_T *)0x1F0)
#define TS1          (*(volatile __near unsigned short *)0x1F2)
#define TS1L         (*(volatile __near unsigned char  *)0x1F2)
#define TS1L_bit     (*(volatile __near __bitf_T *)0x1F2)
#define TT1          (*(volatile __near unsigned short *)0x1F4)
#define TT1L         (*(volatile __near unsigned char  *)0x1F4)
#define TT1L_bit     (*(volatile __near __bitf_T *)0x1F4)
#define TPS1         (*(volatile __near unsigned short *)0x1F6)
#define TO1          (*(volatile __near unsigned short *)0x1F8)
#define TO1L         (*(volatile __near unsigned char  *)0x1F8)
#define TOE1         (*(volatile __near unsigned short *)0x1FA)
#define TOE1L        (*(volatile __near unsigned char  *)0x1FA)
#define TOE1L_bit    (*(volatile __near __bitf_T *)0x1FA)
#define TOL1         (*(volatile __near unsigned short *)0x1FC)
#define TOL1L        (*(volatile __near unsigned char  *)0x1FC)
#define TOM1         (*(volatile __near unsigned short *)0x1FE)
#define TOM1L        (*(volatile __near unsigned char  *)0x1FE)
#define MIOTRM       (*(volatile __near unsigned char  *)0x212)
#define LIOTRM       (*(volatile __near unsigned char  *)0x213)
#define MOSCDIV      (*(volatile __near unsigned char  *)0x214)
#define WKUPMD       (*(volatile __near unsigned char  *)0x215)
#define WKUPMD_bit   (*(volatile __near __bitf_T *)0x215)
#define FWKUP        (((volatile __near __bitf_T *)0x215)->no0)
#define PSMCR        (*(volatile __near unsigned char  *)0x216)
#define PSMCR_bit    (*(volatile __near __bitf_T *)0x216)
#define RAMSDS       (((volatile __near __bitf_T *)0x216)->no0)
#define RAMSDMD      (((volatile __near __bitf_T *)0x216)->no1)
#define LVDFCLR      (*(volatile __near unsigned char  *)0x218)
#define LVDFCLR_bit  (*(volatile __near __bitf_T *)0x218)
#define DLVD0FCLR    (((volatile __near __bitf_T *)0x218)->no2)
#define DLVD1FCLR    (((volatile __near __bitf_T *)0x218)->no3)
#define SEC          (*(volatile __near unsigned char  *)0x220)
#define MIN          (*(volatile __near unsigned char  *)0x221)
#define HOUR         (*(volatile __near unsigned char  *)0x222)
#define WEEK         (*(volatile __near unsigned char  *)0x223)
#define DAY          (*(volatile __near unsigned char  *)0x224)
#define MONTH        (*(volatile __near unsigned char  *)0x225)
#define YEAR         (*(volatile __near unsigned char  *)0x226)
#define SUBCUD       (*(volatile __near unsigned char  *)0x227)
#define ALARMWM      (*(volatile __near unsigned char  *)0x228)
#define ALARMWH      (*(volatile __near unsigned char  *)0x229)
#define ALARMWW      (*(volatile __near unsigned char  *)0x22A)
#define RTCC0        (*(volatile __near unsigned char  *)0x22B)
#define RTCC0_bit    (*(volatile __near __bitf_T *)0x22B)
#define RTC128EN     (((volatile __near __bitf_T *)0x22B)->no4)
#define RCLOE1       (((volatile __near __bitf_T *)0x22B)->no5)
#define RTCE         (((volatile __near __bitf_T *)0x22B)->no7)
#define RTCC1        (*(volatile __near unsigned char  *)0x22C)
#define RTCC1_bit    (*(volatile __near __bitf_T *)0x22C)
#define RWAIT        (((volatile __near __bitf_T *)0x22C)->no0)
#define RWST         (((volatile __near __bitf_T *)0x22C)->no1)
#define RIFG         (((volatile __near __bitf_T *)0x22C)->no3)
#define WAFG         (((volatile __near __bitf_T *)0x22C)->no4)
#define WALIE        (((volatile __near __bitf_T *)0x22C)->no6)
#define WALE         (((volatile __near __bitf_T *)0x22C)->no7)
#define IICCTL00     (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit (*(volatile __near __bitf_T *)0x230)
#define SPT0         (((volatile __near __bitf_T *)0x230)->no0)
#define STT0         (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0        (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0        (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0        (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0        (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0        (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0        (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01     (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit (*(volatile __near __bitf_T *)0x231)
#define PRS0         (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0         (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0         (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0         (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0         (((volatile __near __bitf_T *)0x231)->no5)
#define SVADIS0      (((volatile __near __bitf_T *)0x231)->no6)
#define WUP0         (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0       (*(volatile __near unsigned char  *)0x232)
#define IICWH0       (*(volatile __near unsigned char  *)0x233)
#define SVA0         (*(volatile __near unsigned char  *)0x234)
#define IICCTL10     (*(volatile __near unsigned char  *)0x238)
#define IICCTL10_bit (*(volatile __near __bitf_T *)0x238)
#define SPT1         (((volatile __near __bitf_T *)0x238)->no0)
#define STT1         (((volatile __near __bitf_T *)0x238)->no1)
#define ACKE1        (((volatile __near __bitf_T *)0x238)->no2)
#define WTIM1        (((volatile __near __bitf_T *)0x238)->no3)
#define SPIE1        (((volatile __near __bitf_T *)0x238)->no4)
#define WREL1        (((volatile __near __bitf_T *)0x238)->no5)
#define LREL1        (((volatile __near __bitf_T *)0x238)->no6)
#define IICE1        (((volatile __near __bitf_T *)0x238)->no7)
#define IICCTL11     (*(volatile __near unsigned char  *)0x239)
#define IICCTL11_bit (*(volatile __near __bitf_T *)0x239)
#define PRS1         (((volatile __near __bitf_T *)0x239)->no0)
#define DFC1         (((volatile __near __bitf_T *)0x239)->no2)
#define SMC1         (((volatile __near __bitf_T *)0x239)->no3)
#define DAD1         (((volatile __near __bitf_T *)0x239)->no4)
#define CLD1         (((volatile __near __bitf_T *)0x239)->no5)
#define SVADIS1      (((volatile __near __bitf_T *)0x239)->no6)
#define WUP1         (((volatile __near __bitf_T *)0x239)->no7)
#define IICWL1       (*(volatile __near unsigned char  *)0x23A)
#define IICWH1       (*(volatile __near unsigned char  *)0x23B)
#define SVA1         (*(volatile __near unsigned char  *)0x23C)
#define PMCT0        (*(volatile __near unsigned char  *)0x260)
#define PMCT0_bit    (*(volatile __near __bitf_T *)0x260)
#define PMCT2        (*(volatile __near unsigned char  *)0x262)
#define PMCT2_bit    (*(volatile __near __bitf_T *)0x262)
#define PMCT3        (*(volatile __near unsigned char  *)0x263)
#define PMCT3_bit    (*(volatile __near __bitf_T *)0x263)
#define PMCT5        (*(volatile __near unsigned char  *)0x265)
#define PMCT5_bit    (*(volatile __near __bitf_T *)0x265)
#define PMCT6        (*(volatile __near unsigned char  *)0x266)
#define PMCT6_bit    (*(volatile __near __bitf_T *)0x266)
#define PMCT7        (*(volatile __near unsigned char  *)0x267)
#define PMCT7_bit    (*(volatile __near __bitf_T *)0x267)
#define PMCT15       (*(volatile __near unsigned char  *)0x26F)
#define PMCT15_bit   (*(volatile __near __bitf_T *)0x26F)
#define PMCE0        (*(volatile __near unsigned char  *)0x280)
#define PMCE0_bit    (*(volatile __near __bitf_T *)0x280)
#define PMCE1        (*(volatile __near unsigned char  *)0x281)
#define PMCE1_bit    (*(volatile __near __bitf_T *)0x281)
#define PMCE5        (*(volatile __near unsigned char  *)0x285)
#define PMCE5_bit    (*(volatile __near __bitf_T *)0x285)
#define PMCE6        (*(volatile __near unsigned char  *)0x286)
#define PMCE6_bit    (*(volatile __near __bitf_T *)0x286)
#define CCS0         (*(volatile __near unsigned char  *)0x2A0)
#define CCS4         (*(volatile __near unsigned char  *)0x2A4)
#define CCS5         (*(volatile __near unsigned char  *)0x2A5)
#define CCS6         (*(volatile __near unsigned char  *)0x2A6)
#define CCS7         (*(volatile __near unsigned char  *)0x2A7)
#define CCDE         (*(volatile __near unsigned char  *)0x2A8)
#define CCDE_bit     (*(volatile __near __bitf_T *)0x2A8)
#define PTDC         (*(volatile __near unsigned char  *)0x2A9)
#define PTDC_bit     (*(volatile __near __bitf_T *)0x2A9)
#define PFOE0        (*(volatile __near unsigned char  *)0x2AA)
#define PFOE0_bit    (*(volatile __near __bitf_T *)0x2AA)
#define PFOE1        (*(volatile __near unsigned char  *)0x2AB)
#define PFOE1_bit    (*(volatile __near __bitf_T *)0x2AB)
#define PDIDIS0      (*(volatile __near unsigned char  *)0x2B0)
#define PDIDIS0_bit  (*(volatile __near __bitf_T *)0x2B0)
#define PDIDIS1      (*(volatile __near unsigned char  *)0x2B1)
#define PDIDIS1_bit  (*(volatile __near __bitf_T *)0x2B1)
#define PDIDIS3      (*(volatile __near unsigned char  *)0x2B3)
#define PDIDIS3_bit  (*(volatile __near __bitf_T *)0x2B3)
#define PDIDIS4      (*(volatile __near unsigned char  *)0x2B4)
#define PDIDIS4_bit  (*(volatile __near __bitf_T *)0x2B4)
#define PDIDIS5      (*(volatile __near unsigned char  *)0x2B5)
#define PDIDIS5_bit  (*(volatile __near __bitf_T *)0x2B5)
#define PDIDIS7      (*(volatile __near unsigned char  *)0x2B7)
#define PDIDIS7_bit  (*(volatile __near __bitf_T *)0x2B7)
#define PDIDIS8      (*(volatile __near unsigned char  *)0x2B8)
#define PDIDIS8_bit  (*(volatile __near __bitf_T *)0x2B8)
#define PDIDIS9      (*(volatile __near unsigned char  *)0x2B9)
#define PDIDIS9_bit  (*(volatile __near __bitf_T *)0x2B9)
#define PDIDIS12     (*(volatile __near unsigned char  *)0x2BC)
#define PDIDIS12_bit (*(volatile __near __bitf_T *)0x2BC)
#define PDIDIS13     (*(volatile __near unsigned char  *)0x2BD)
#define PDIDIS13_bit (*(volatile __near __bitf_T *)0x2BD)
#define PDIDIS14     (*(volatile __near unsigned char  *)0x2BE)
#define PDIDIS14_bit (*(volatile __near __bitf_T *)0x2BE)
#define FLPMC        (*(volatile __near unsigned char  *)0x2C0)
#define FLARS        (*(volatile __near unsigned char  *)0x2C1)
#define FLARS_bit    (*(volatile __near __bitf_T *)0x2C1)
#define FLAPL        (*(volatile __near unsigned short *)0x2C2)
#define FLAPH        (*(volatile __near unsigned char  *)0x2C4)
#define FSSQ         (*(volatile __near unsigned char  *)0x2C5)
#define FSSQ_bit     (*(volatile __near __bitf_T *)0x2C5)
#define FSSTP        (((volatile __near __bitf_T *)0x2C5)->no6)
#define SQST         (((volatile __near __bitf_T *)0x2C5)->no7)
#define FLSEDL       (*(volatile __near unsigned short *)0x2C6)
#define FLSEDH       (*(volatile __near unsigned char  *)0x2C8)
#define FLRST        (*(volatile __near unsigned char  *)0x2C9)
#define FLRST_bit    (*(volatile __near __bitf_T *)0x2C9)
#define FSASTL       (*(volatile __near unsigned char  *)0x2CA)
#define FSASTL_bit   (*(volatile __near __bitf_T *)0x2CA)
#define FSASTH       (*(volatile __near unsigned char  *)0x2CB)
#define FSASTH_bit   (*(volatile __near __bitf_T *)0x2CB)
#define FLWL         (*(volatile __near unsigned short *)0x2CC)
#define FLWH         (*(volatile __near unsigned short *)0x2CE)
#define DTCBAR       (*(volatile __near unsigned char  *)0x2E0)
#define DTCEN0       (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit   (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN1       (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit   (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN2       (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit   (*(volatile __near __bitf_T *)0x2EA)
#define DTCEN3       (*(volatile __near unsigned char  *)0x2EB)
#define DTCEN3_bit   (*(volatile __near __bitf_T *)0x2EB)
#define DTCEN4       (*(volatile __near unsigned char  *)0x2EC)
#define DTCEN4_bit   (*(volatile __near __bitf_T *)0x2EC)
#define CRC0CTL      (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit  (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN       (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL       (*(volatile __near unsigned short *)0x2F2)
#define CRCD         (*(volatile __near unsigned short *)0x2FA)
#define TXBA0        (*(volatile __near unsigned char  *)0x300)
#define RXBA0        (*(volatile __near unsigned char  *)0x301)
#define ASIMA00      (*(volatile __near unsigned char  *)0x302)
#define ASIMA00_bit  (*(volatile __near __bitf_T *)0x302)
#define ISRMA0       (((volatile __near __bitf_T *)0x302)->no0)
#define ISSMA0       (((volatile __near __bitf_T *)0x302)->no1)
#define RXEA0        (((volatile __near __bitf_T *)0x302)->no5)
#define TXEA0        (((volatile __near __bitf_T *)0x302)->no6)
#define UARTAEN0     (((volatile __near __bitf_T *)0x302)->no7)
#define ASIMA01      (*(volatile __near unsigned char  *)0x303)
#define ASIMA01_bit  (*(volatile __near __bitf_T *)0x303)
#define BRGCA0       (*(volatile __near unsigned char  *)0x304)
#define ASISA0       (*(volatile __near unsigned char  *)0x305)
#define ASCTA0       (*(volatile __near unsigned char  *)0x306)
#define ASCTA0_bit   (*(volatile __near __bitf_T *)0x306)
#define OVECTA0      (((volatile __near __bitf_T *)0x306)->no0)
#define FECTA0       (((volatile __near __bitf_T *)0x306)->no1)
#define PECTA0       (((volatile __near __bitf_T *)0x306)->no2)
#define TXBA1        (*(volatile __near unsigned char  *)0x308)
#define RXBA1        (*(volatile __near unsigned char  *)0x309)
#define ASIMA10      (*(volatile __near unsigned char  *)0x30A)
#define ASIMA10_bit  (*(volatile __near __bitf_T *)0x30A)
#define ISRMA1       (((volatile __near __bitf_T *)0x30A)->no0)
#define ISSMA1       (((volatile __near __bitf_T *)0x30A)->no1)
#define RXEA1        (((volatile __near __bitf_T *)0x30A)->no5)
#define TXEA1        (((volatile __near __bitf_T *)0x30A)->no6)
#define UARTAEN1     (((volatile __near __bitf_T *)0x30A)->no7)
#define ASIMA11      (*(volatile __near unsigned char  *)0x30B)
#define ASIMA11_bit  (*(volatile __near __bitf_T *)0x30B)
#define BRGCA1       (*(volatile __near unsigned char  *)0x30C)
#define ASISA1       (*(volatile __near unsigned char  *)0x30D)
#define ASCTA1       (*(volatile __near unsigned char  *)0x30E)
#define ASCTA1_bit   (*(volatile __near __bitf_T *)0x30E)
#define OVECTA1      (((volatile __near __bitf_T *)0x30E)->no0)
#define FECTA1       (((volatile __near __bitf_T *)0x30E)->no1)
#define PECTA1       (((volatile __near __bitf_T *)0x30E)->no2)
#define UTA0CK       (*(volatile __near unsigned char  *)0x310)
#define UTA0CK_bit   (*(volatile __near __bitf_T *)0x310)
#define UTA1CK       (*(volatile __near unsigned char  *)0x311)
#define UTA1CK_bit   (*(volatile __near __bitf_T *)0x311)
#define DACS0        (*(volatile __near unsigned char  *)0x330)
#define DACS1        (*(volatile __near unsigned char  *)0x331)
#define DAM          (*(volatile __near unsigned char  *)0x332)
#define DAM_bit      (*(volatile __near __bitf_T *)0x332)
#define DACE0        (((volatile __near __bitf_T *)0x332)->no4)
#define DACE1        (((volatile __near __bitf_T *)0x332)->no5)
#define COMPMDR      (*(volatile __near unsigned char  *)0x340)
#define COMPMDR_bit  (*(volatile __near __bitf_T *)0x340)
#define C0ENB        (((volatile __near __bitf_T *)0x340)->no0)
#define C1ENB        (((volatile __near __bitf_T *)0x340)->no4)
#define COMPFIR      (*(volatile __near unsigned char  *)0x341)
#define COMPFIR_bit  (*(volatile __near __bitf_T *)0x341)
#define COMPOCR      (*(volatile __near unsigned char  *)0x342)
#define COMPOCR_bit  (*(volatile __near __bitf_T *)0x342)
#define C0IE         (((volatile __near __bitf_T *)0x342)->no0)
#define C0OE         (((volatile __near __bitf_T *)0x342)->no1)
#define C1IE         (((volatile __near __bitf_T *)0x342)->no4)
#define C1OE         (((volatile __near __bitf_T *)0x342)->no5)
#define ITLCMP00     (*(volatile __near unsigned short *)0x360)
#define ITLCMP000    (*(volatile __near unsigned char  *)0x360)
#define ITLCMP001    (*(volatile __near unsigned char  *)0x361)
#define ITLCMP01     (*(volatile __near unsigned short *)0x362)
#define ITLCMP012    (*(volatile __near unsigned char  *)0x362)
#define ITLCMP013    (*(volatile __near unsigned char  *)0x363)
#define ITLCAP00     (*(volatile __near unsigned short *)0x364)
#define ITLCTL0      (*(volatile __near unsigned char  *)0x366)
#define ITLCTL0_bit  (*(volatile __near __bitf_T *)0x366)
#define ITLEN00      (((volatile __near __bitf_T *)0x366)->no0)
#define ITLEN01      (((volatile __near __bitf_T *)0x366)->no1)
#define ITLEN02      (((volatile __near __bitf_T *)0x366)->no2)
#define ITLEN03      (((volatile __near __bitf_T *)0x366)->no3)
#define ITLCSEL0     (*(volatile __near unsigned char  *)0x367)
#define ITLFDIV00    (*(volatile __near unsigned char  *)0x368)
#define ITLFDIV01    (*(volatile __near unsigned char  *)0x369)
#define ITLCC0       (*(volatile __near unsigned char  *)0x36A)
#define ITLCC0_bit   (*(volatile __near __bitf_T *)0x36A)
#define CAPR0        (((volatile __near __bitf_T *)0x36A)->no4)
#define CAPF0CR      (((volatile __near __bitf_T *)0x36A)->no6)
#define ITLS0        (*(volatile __near unsigned char  *)0x36B)
#define ITLMKF0      (*(volatile __near unsigned char  *)0x36C)
#define SMSI0        (*(volatile __near unsigned short *)0x380)
#define SMSI1        (*(volatile __near unsigned short *)0x382)
#define SMSI2        (*(volatile __near unsigned short *)0x384)
#define SMSI3        (*(volatile __near unsigned short *)0x386)
#define SMSI4        (*(volatile __near unsigned short *)0x388)
#define SMSI5        (*(volatile __near unsigned short *)0x38A)
#define SMSI6        (*(volatile __near unsigned short *)0x38C)
#define SMSI7        (*(volatile __near unsigned short *)0x38E)
#define SMSI8        (*(volatile __near unsigned short *)0x390)
#define SMSI9        (*(volatile __near unsigned short *)0x392)
#define SMSI10       (*(volatile __near unsigned short *)0x394)
#define SMSI11       (*(volatile __near unsigned short *)0x396)
#define SMSI12       (*(volatile __near unsigned short *)0x398)
#define SMSI13       (*(volatile __near unsigned short *)0x39A)
#define SMSI14       (*(volatile __near unsigned short *)0x39C)
#define SMSI15       (*(volatile __near unsigned short *)0x39E)
#define SMSI16       (*(volatile __near unsigned short *)0x3A0)
#define SMSI17       (*(volatile __near unsigned short *)0x3A2)
#define SMSI18       (*(volatile __near unsigned short *)0x3A4)
#define SMSI19       (*(volatile __near unsigned short *)0x3A6)
#define SMSI20       (*(volatile __near unsigned short *)0x3A8)
#define SMSI21       (*(volatile __near unsigned short *)0x3AA)
#define SMSI22       (*(volatile __near unsigned short *)0x3AC)
#define SMSI23       (*(volatile __near unsigned short *)0x3AE)
#define SMSI24       (*(volatile __near unsigned short *)0x3B0)
#define SMSI25       (*(volatile __near unsigned short *)0x3B2)
#define SMSI26       (*(volatile __near unsigned short *)0x3B4)
#define SMSI27       (*(volatile __near unsigned short *)0x3B6)
#define SMSI28       (*(volatile __near unsigned short *)0x3B8)
#define SMSI29       (*(volatile __near unsigned short *)0x3BA)
#define SMSI30       (*(volatile __near unsigned short *)0x3BC)
#define SMSI31       (*(volatile __near unsigned short *)0x3BE)
#define SMSG0        (*(volatile __near unsigned short *)0x3C0)
#define SMSG1        (*(volatile __near unsigned short *)0x3C2)
#define SMSG2        (*(volatile __near unsigned short *)0x3C4)
#define SMSG3        (*(volatile __near unsigned short *)0x3C6)
#define SMSG4        (*(volatile __near unsigned short *)0x3C8)
#define SMSG5        (*(volatile __near unsigned short *)0x3CA)
#define SMSG6        (*(volatile __near unsigned short *)0x3CC)
#define SMSG7        (*(volatile __near unsigned short *)0x3CE)
#define SMSG8        (*(volatile __near unsigned short *)0x3D0)
#define SMSG9        (*(volatile __near unsigned short *)0x3D2)
#define SMSG10       (*(volatile __near unsigned short *)0x3D4)
#define SMSG11       (*(volatile __near unsigned short *)0x3D6)
#define SMSG12       (*(volatile __near unsigned short *)0x3D8)
#define SMSG13       (*(volatile __near unsigned short *)0x3DA)
#define SMSG14       (*(volatile __near unsigned short *)0x3DC)
#define SMSG15       (*(volatile __near unsigned short *)0x3DE)
#define SMSC         (*(volatile __near unsigned char  *)0x3E0)
#define SMSC_bit     (*(volatile __near __bitf_T *)0x3E0)
#define LONGWAIT     (((volatile __near __bitf_T *)0x3E0)->no4)
#define SMSTRGWAIT   (((volatile __near __bitf_T *)0x3E0)->no5)
#define SMSSTOP      (((volatile __near __bitf_T *)0x3E0)->no6)
#define SMSSTART     (((volatile __near __bitf_T *)0x3E0)->no7)
#define SMSS         (*(volatile __near unsigned char  *)0x3E1)
#define SMSS_bit     (*(volatile __near __bitf_T *)0x3E1)
#define SMSSTAT      (((volatile __near __bitf_T *)0x3E1)->no7)
#define FLSIVC0      (*(volatile __near unsigned short *)0x480)
#define FLSIVC1      (*(volatile __near unsigned short *)0x482)
#define GFLASH0      (*(volatile __near unsigned short *)0x488)
#define GFLASH1      (*(volatile __near unsigned short *)0x48A)
#define GFLASH2      (*(volatile __near unsigned short *)0x48C)
#define GIAWCTL      (*(volatile __near unsigned short *)0x48E)
#define CTSUCRAL     (*(volatile __near unsigned short *)0x500)
#define CTSUCR0      (*(volatile __near unsigned char  *)0x500)
#define CTSUCR1      (*(volatile __near unsigned char  *)0x501)
#define CTSUCRAH     (*(volatile __near unsigned short *)0x502)
#define CTSUCR2      (*(volatile __near unsigned char  *)0x502)
#define CTSUCR3      (*(volatile __near unsigned char  *)0x503)
#define CTSUCRBL     (*(volatile __near unsigned short *)0x504)
#define CTSUSDPRS    (*(volatile __near unsigned char  *)0x504)
#define CTSUSST      (*(volatile __near unsigned char  *)0x505)
#define CTSUCRBH     (*(volatile __near unsigned short *)0x506)
#define CTSUDCLKC    (*(volatile __near unsigned char  *)0x507)
#define CTSUMCHL     (*(volatile __near unsigned short *)0x508)
#define CTSUMCH0     (*(volatile __near unsigned char  *)0x508)
#define CTSUMCH1     (*(volatile __near unsigned char  *)0x509)
#define CTSUMCHH     (*(volatile __near unsigned short *)0x50A)
#define CTSUMFAF     (*(volatile __near unsigned char  *)0x50A)
#define CTSUCHACAL   (*(volatile __near unsigned short *)0x50C)
#define CTSUCHAC0    (*(volatile __near unsigned char  *)0x50C)
#define CTSUCHAC1    (*(volatile __near unsigned char  *)0x50D)
#define CTSUCHACAH   (*(volatile __near unsigned short *)0x50E)
#define CTSUCHAC2    (*(volatile __near unsigned char  *)0x50E)
#define CTSUCHAC3    (*(volatile __near unsigned char  *)0x50F)
#define CTSUCHACBL   (*(volatile __near unsigned short *)0x510)
#define CTSUCHAC4    (*(volatile __near unsigned char  *)0x510)
#define CTSUCHAC5    (*(volatile __near unsigned char  *)0x511)
#define CTSUCHACBH   (*(volatile __near unsigned short *)0x512)
#define CTSUCHAC6    (*(volatile __near unsigned char  *)0x512)
#define CTSUCHAC7    (*(volatile __near unsigned char  *)0x513)
#define CTSUCHTRCAL  (*(volatile __near unsigned short *)0x514)
#define CTSUCHTRC0   (*(volatile __near unsigned char  *)0x514)
#define CTSUCHTRC1   (*(volatile __near unsigned char  *)0x515)
#define CTSUCHTRCAH  (*(volatile __near unsigned short *)0x516)
#define CTSUCHTRC2   (*(volatile __near unsigned char  *)0x516)
#define CTSUCHTRC3   (*(volatile __near unsigned char  *)0x517)
#define CTSUCHTRCBL  (*(volatile __near unsigned short *)0x518)
#define CTSUCHTRC4   (*(volatile __near unsigned char  *)0x518)
#define CTSUCHTRC5   (*(volatile __near unsigned char  *)0x519)
#define CTSUCHTRCBH  (*(volatile __near unsigned short *)0x51A)
#define CTSUCHTRC6   (*(volatile __near unsigned char  *)0x51A)
#define CTSUCHTRC7   (*(volatile __near unsigned char  *)0x51B)
#define CTSUSRL      (*(volatile __near unsigned short *)0x51C)
#define CTSUST1      (*(volatile __near unsigned char  *)0x51C)
#define CTSUST       (*(volatile __near unsigned char  *)0x51D)
#define CTSUSRH      (*(volatile __near unsigned short *)0x51E)
#define CTSUST2      (*(volatile __near unsigned char  *)0x51E)
#define CTSUSO0      (*(volatile __near unsigned short *)0x520)
#define CTSUSO1      (*(volatile __near unsigned short *)0x522)
#define CTSUSC       (*(volatile __near unsigned short *)0x524)
#define CTSUUC       (*(volatile __near unsigned short *)0x526)
#define CTSUDBGR0    (*(volatile __near unsigned short *)0x528)
#define CTSUDBGR1    (*(volatile __near unsigned short *)0x52A)
#define CTSUSUCLK0   (*(volatile __near unsigned short *)0x52C)
#define CTSUSUCLK1   (*(volatile __near unsigned short *)0x52E)
#define CTSUSUCLK2   (*(volatile __near unsigned short *)0x530)
#define CTSUSUCLK3   (*(volatile __near unsigned short *)0x532)
#define TRNGSDR      (*(volatile __near unsigned char  *)0x540)
#define TRNGSCR0     (*(volatile __near unsigned char  *)0x542)
#define CTSUTRIM0    (*(volatile __near unsigned short *)0x600)
#define RTRIM        (*(volatile __near unsigned char  *)0x600)
#define DACTRIM      (*(volatile __near unsigned char  *)0x601)
#define CTSUTRIM1    (*(volatile __near unsigned short *)0x602)
#define SUADJD       (*(volatile __near unsigned char  *)0x602)
#define TRESULT4     (*(volatile __near unsigned char  *)0x603)
#define CTSUTRIM2    (*(volatile __near unsigned short *)0x604)
#define TRESULT0     (*(volatile __near unsigned char  *)0x604)
#define TRESULT1     (*(volatile __near unsigned char  *)0x605)
#define CTSUTRIM3    (*(volatile __near unsigned short *)0x606)
#define TRESULT2     (*(volatile __near unsigned char  *)0x606)
#define TRESULT3     (*(volatile __near unsigned char  *)0x607)
#define REMCON0      (*(volatile __near unsigned char  *)0x640)
#define REMCON0_bit  (*(volatile __near __bitf_T *)0x640)
#define ENFLG        (((volatile __near __bitf_T *)0x640)->no0)
#define INFLG        (((volatile __near __bitf_T *)0x640)->no3)
#define REMCON1      (*(volatile __near unsigned char  *)0x641)
#define REMCON1_bit  (*(volatile __near __bitf_T *)0x641)
#define EN           (((volatile __near __bitf_T *)0x641)->no2)
#define INTMD        (((volatile __near __bitf_T *)0x641)->no3)
#define REMSTS       (*(volatile __near unsigned char  *)0x642)
#define REMSTS_bit   (*(volatile __near __bitf_T *)0x642)
#define CPFLG        (((volatile __near __bitf_T *)0x642)->no0)
#define REFLG        (((volatile __near __bitf_T *)0x642)->no1)
#define DRFLG        (((volatile __near __bitf_T *)0x642)->no2)
#define BFULFLG      (((volatile __near __bitf_T *)0x642)->no3)
#define HDFLG        (((volatile __near __bitf_T *)0x642)->no4)
#define D0FLG        (((volatile __near __bitf_T *)0x642)->no5)
#define D1FLG        (((volatile __near __bitf_T *)0x642)->no6)
#define SDFLG        (((volatile __near __bitf_T *)0x642)->no7)
#define REMINT       (*(volatile __near unsigned char  *)0x643)
#define REMINT_bit   (*(volatile __near __bitf_T *)0x643)
#define CPINT        (((volatile __near __bitf_T *)0x643)->no0)
#define REINT        (((volatile __near __bitf_T *)0x643)->no1)
#define DRINT        (((volatile __near __bitf_T *)0x643)->no2)
#define BFULINT      (((volatile __near __bitf_T *)0x643)->no3)
#define HDINT        (((volatile __near __bitf_T *)0x643)->no4)
#define DINT         (((volatile __near __bitf_T *)0x643)->no5)
#define SDINT        (((volatile __near __bitf_T *)0x643)->no7)
#define REMCPC       (*(volatile __near unsigned char  *)0x645)
#define REMCPD       (*(volatile __near unsigned short *)0x646)
#define HDPMIN       (*(volatile __near unsigned short *)0x648)
#define HDPMAX       (*(volatile __near unsigned short *)0x64A)
#define D0PMIN       (*(volatile __near unsigned char  *)0x64C)
#define D0PMAX       (*(volatile __near unsigned char  *)0x64D)
#define D1PMIN       (*(volatile __near unsigned char  *)0x64E)
#define D1PMAX       (*(volatile __near unsigned char  *)0x64F)
#define SDPMIN       (*(volatile __near unsigned short *)0x650)
#define SDPMAX       (*(volatile __near unsigned short *)0x652)
#define REMPE        (*(volatile __near unsigned short *)0x654)
#define REMSTC       (*(volatile __near unsigned char  *)0x656)
#define REMSTC_bit   (*(volatile __near __bitf_T *)0x656)
#define SNZON        (((volatile __near __bitf_T *)0x656)->no0)
#define REMRBIT      (*(volatile __near unsigned char  *)0x657)
#define REMRBIT_bit  (*(volatile __near __bitf_T *)0x657)
#define RBIT0        (((volatile __near __bitf_T *)0x657)->no0)
#define REMDAT0      (*(volatile __near unsigned char  *)0x658)
#define REMDAT0_bit  (*(volatile __near __bitf_T *)0x658)
#define DAT00        (((volatile __near __bitf_T *)0x658)->no0)
#define REMDAT1      (*(volatile __near unsigned char  *)0x659)
#define REMDAT2      (*(volatile __near unsigned char  *)0x65A)
#define REMDAT3      (*(volatile __near unsigned char  *)0x65B)
#define REMDAT4      (*(volatile __near unsigned char  *)0x65C)
#define REMDAT5      (*(volatile __near unsigned char  *)0x65D)
#define REMDAT6      (*(volatile __near unsigned char  *)0x65E)
#define REMDAT7      (*(volatile __near unsigned char  *)0x65F)
#define REMTIM       (*(volatile __near unsigned short *)0x660)
#define ELISEL0      (*(volatile __near unsigned char  *)0x680)
#define ELISEL1      (*(volatile __near unsigned char  *)0x681)
#define ELISEL2      (*(volatile __near unsigned char  *)0x682)
#define ELISEL3      (*(volatile __near unsigned char  *)0x683)
#define ELISEL4      (*(volatile __near unsigned char  *)0x684)
#define ELISEL5      (*(volatile __near unsigned char  *)0x685)
#define ELISEL6      (*(volatile __near unsigned char  *)0x686)
#define ELISEL7      (*(volatile __near unsigned char  *)0x687)
#define ELISEL8      (*(volatile __near unsigned char  *)0x688)
#define ELISEL9      (*(volatile __near unsigned char  *)0x689)
#define ELISEL10     (*(volatile __near unsigned char  *)0x68A)
#define ELISEL11     (*(volatile __near unsigned char  *)0x68B)
#define ELL1SEL0     (*(volatile __near unsigned char  *)0x690)
#define ELL1SEL1     (*(volatile __near unsigned char  *)0x691)
#define ELL1SEL2     (*(volatile __near unsigned char  *)0x692)
#define ELL1SEL3     (*(volatile __near unsigned char  *)0x693)
#define ELL1SEL4     (*(volatile __near unsigned char  *)0x694)
#define ELL1SEL5     (*(volatile __near unsigned char  *)0x695)
#define ELL1SEL6     (*(volatile __near unsigned char  *)0x696)
#define ELL1CTL      (*(volatile __near unsigned char  *)0x697)
#define ELL1LNK0     (*(volatile __near unsigned char  *)0x698)
#define ELL1LNK1     (*(volatile __near unsigned char  *)0x699)
#define ELL1LNK2     (*(volatile __near unsigned char  *)0x69A)
#define ELL1LNK3     (*(volatile __near unsigned char  *)0x69B)
#define ELL1LNK4     (*(volatile __near unsigned char  *)0x69C)
#define ELL1LNK5     (*(volatile __near unsigned char  *)0x69D)
#define ELL1LNK6     (*(volatile __near unsigned char  *)0x69E)
#define ELL2SEL0     (*(volatile __near unsigned char  *)0x6A0)
#define ELL2SEL1     (*(volatile __near unsigned char  *)0x6A1)
#define ELL2SEL2     (*(volatile __near unsigned char  *)0x6A2)
#define ELL2SEL3     (*(volatile __near unsigned char  *)0x6A3)
#define ELL2SEL4     (*(volatile __near unsigned char  *)0x6A4)
#define ELL2SEL5     (*(volatile __near unsigned char  *)0x6A5)
#define ELL2SEL6     (*(volatile __near unsigned char  *)0x6A6)
#define ELL2CTL      (*(volatile __near unsigned char  *)0x6A7)
#define ELL2LNK0     (*(volatile __near unsigned char  *)0x6A8)
#define ELL2LNK1     (*(volatile __near unsigned char  *)0x6A9)
#define ELL2LNK2     (*(volatile __near unsigned char  *)0x6AA)
#define ELL2LNK3     (*(volatile __near unsigned char  *)0x6AB)
#define ELL2LNK4     (*(volatile __near unsigned char  *)0x6AC)
#define ELL2LNK5     (*(volatile __near unsigned char  *)0x6AD)
#define ELL2LNK6     (*(volatile __near unsigned char  *)0x6AE)
#define ELL3SEL0     (*(volatile __near unsigned char  *)0x6B0)
#define ELL3SEL1     (*(volatile __near unsigned char  *)0x6B1)
#define ELL3SEL2     (*(volatile __near unsigned char  *)0x6B2)
#define ELL3SEL3     (*(volatile __near unsigned char  *)0x6B3)
#define ELL3SEL4     (*(volatile __near unsigned char  *)0x6B4)
#define ELL3SEL5     (*(volatile __near unsigned char  *)0x6B5)
#define ELL3SEL6     (*(volatile __near unsigned char  *)0x6B6)
#define ELL3CTL      (*(volatile __near unsigned char  *)0x6B7)
#define ELL3LNK0     (*(volatile __near unsigned char  *)0x6B8)
#define ELL3LNK1     (*(volatile __near unsigned char  *)0x6B9)
#define ELL3LNK2     (*(volatile __near unsigned char  *)0x6BA)
#define ELL3LNK3     (*(volatile __near unsigned char  *)0x6BB)
#define ELL3LNK4     (*(volatile __near unsigned char  *)0x6BC)
#define ELL3LNK5     (*(volatile __near unsigned char  *)0x6BD)
#define ELL3LNK6     (*(volatile __near unsigned char  *)0x6BE)
#define ELOSEL0      (*(volatile __near unsigned char  *)0x6C0)
#define ELOSEL1      (*(volatile __near unsigned char  *)0x6C1)
#define ELOSEL2      (*(volatile __near unsigned char  *)0x6C2)
#define ELOSEL3      (*(volatile __near unsigned char  *)0x6C3)
#define ELOSEL4      (*(volatile __near unsigned char  *)0x6C4)
#define ELOSEL5      (*(volatile __near unsigned char  *)0x6C5)
#define ELOSEL6      (*(volatile __near unsigned char  *)0x6C6)
#define ELOSEL7      (*(volatile __near unsigned char  *)0x6C7)
#define ELOENCTL     (*(volatile __near unsigned char  *)0x6C8)
#define ELOMONI      (*(volatile __near unsigned char  *)0x6C9)
#define P0           (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit       (*(volatile __near __bitf_T *)0xFF00)
#define P1           (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit       (*(volatile __near __bitf_T *)0xFF01)
#define P2           (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit       (*(volatile __near __bitf_T *)0xFF02)
#define P3           (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit       (*(volatile __near __bitf_T *)0xFF03)
#define P4           (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit       (*(volatile __near __bitf_T *)0xFF04)
#define P5           (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit       (*(volatile __near __bitf_T *)0xFF05)
#define P6           (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit       (*(volatile __near __bitf_T *)0xFF06)
#define P7           (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit       (*(volatile __near __bitf_T *)0xFF07)
#define P8           (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit       (*(volatile __near __bitf_T *)0xFF08)
#define P9           (*(volatile __near unsigned char  *)0xFF09)
#define P9_bit       (*(volatile __near __bitf_T *)0xFF09)
#define P10          (*(volatile __near unsigned char  *)0xFF0A)
#define P10_bit      (*(volatile __near __bitf_T *)0xFF0A)
#define P11          (*(volatile __near unsigned char  *)0xFF0B)
#define P11_bit      (*(volatile __near __bitf_T *)0xFF0B)
#define P12          (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit      (*(volatile __near __bitf_T *)0xFF0C)
#define P13          (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit      (*(volatile __near __bitf_T *)0xFF0D)
#define P14          (*(volatile __near unsigned char  *)0xFF0E)
#define P14_bit      (*(volatile __near __bitf_T *)0xFF0E)
#define P15          (*(volatile __near unsigned char  *)0xFF0F)
#define P15_bit      (*(volatile __near __bitf_T *)0xFF0F)
#define SDR00        (*(volatile __near unsigned short *)0xFF10)
#define SIO00        (*(volatile __near unsigned char  *)0xFF10)
#define TXD0         (*(volatile __near unsigned char  *)0xFF10)
#define SDR01        (*(volatile __near unsigned short *)0xFF12)
#define RXD0         (*(volatile __near unsigned char  *)0xFF12)
#define SIO01        (*(volatile __near unsigned char  *)0xFF12)
#define SDR12        (*(volatile __near unsigned short *)0xFF14)
#define SIO30        (*(volatile __near unsigned char  *)0xFF14)
#define TXD3         (*(volatile __near unsigned char  *)0xFF14)
#define SDR13        (*(volatile __near unsigned short *)0xFF16)
#define RXD3         (*(volatile __near unsigned char  *)0xFF16)
#define SIO31        (*(volatile __near unsigned char  *)0xFF16)
#define TDR00        (*(volatile __near unsigned short *)0xFF18)
#define TDR01        (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L       (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H       (*(volatile __near unsigned char  *)0xFF1B)
#define ADCR         (*(volatile __near unsigned short *)0xFF1E)
#define ADCRH        (*(volatile __near unsigned char  *)0xFF1F)
#define PM0          (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit      (*(volatile __near __bitf_T *)0xFF20)
#define PM1          (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit      (*(volatile __near __bitf_T *)0xFF21)
#define PM2          (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit      (*(volatile __near __bitf_T *)0xFF22)
#define PM3          (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit      (*(volatile __near __bitf_T *)0xFF23)
#define PM4          (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit      (*(volatile __near __bitf_T *)0xFF24)
#define PM5          (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit      (*(volatile __near __bitf_T *)0xFF25)
#define PM6          (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit      (*(volatile __near __bitf_T *)0xFF26)
#define PM7          (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit      (*(volatile __near __bitf_T *)0xFF27)
#define PM8          (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit      (*(volatile __near __bitf_T *)0xFF28)
#define PM9          (*(volatile __near unsigned char  *)0xFF29)
#define PM9_bit      (*(volatile __near __bitf_T *)0xFF29)
#define PM10         (*(volatile __near unsigned char  *)0xFF2A)
#define PM10_bit     (*(volatile __near __bitf_T *)0xFF2A)
#define PM11         (*(volatile __near unsigned char  *)0xFF2B)
#define PM11_bit     (*(volatile __near __bitf_T *)0xFF2B)
#define PM12         (*(volatile __near unsigned char  *)0xFF2C)
#define PM12_bit     (*(volatile __near __bitf_T *)0xFF2C)
#define PM14         (*(volatile __near unsigned char  *)0xFF2E)
#define PM14_bit     (*(volatile __near __bitf_T *)0xFF2E)
#define PM15         (*(volatile __near unsigned char  *)0xFF2F)
#define PM15_bit     (*(volatile __near __bitf_T *)0xFF2F)
#define ADM0         (*(volatile __near unsigned char  *)0xFF30)
#define ADM0_bit     (*(volatile __near __bitf_T *)0xFF30)
#define ADCE         (((volatile __near __bitf_T *)0xFF30)->no0)
#define ADCS         (((volatile __near __bitf_T *)0xFF30)->no7)
#define ADS          (*(volatile __near unsigned char  *)0xFF31)
#define ADS_bit      (*(volatile __near __bitf_T *)0xFF31)
#define ADM1         (*(volatile __near unsigned char  *)0xFF32)
#define ADM1_bit     (*(volatile __near __bitf_T *)0xFF32)
#define KRCTL        (*(volatile __near unsigned char  *)0xFF34)
#define KRCTL_bit    (*(volatile __near __bitf_T *)0xFF34)
#define KREG         (((volatile __near __bitf_T *)0xFF34)->no0)
#define KRMD         (((volatile __near __bitf_T *)0xFF34)->no7)
#define KRF          (*(volatile __near unsigned char  *)0xFF35)
#define KRM0         (*(volatile __near unsigned char  *)0xFF37)
#define KRM0_bit     (*(volatile __near __bitf_T *)0xFF37)
#define EGP0         (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit     (*(volatile __near __bitf_T *)0xFF38)
#define EGN0         (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit     (*(volatile __near __bitf_T *)0xFF39)
#define EGP1         (*(volatile __near unsigned char  *)0xFF3A)
#define EGP1_bit     (*(volatile __near __bitf_T *)0xFF3A)
#define EGN1         (*(volatile __near unsigned char  *)0xFF3B)
#define EGN1_bit     (*(volatile __near __bitf_T *)0xFF3B)
#define SDR02        (*(volatile __near unsigned short *)0xFF44)
#define SIO10        (*(volatile __near unsigned char  *)0xFF44)
#define TXD1         (*(volatile __near unsigned char  *)0xFF44)
#define SDR03        (*(volatile __near unsigned short *)0xFF46)
#define RXD1         (*(volatile __near unsigned char  *)0xFF46)
#define SIO11        (*(volatile __near unsigned char  *)0xFF46)
#define SDR10        (*(volatile __near unsigned short *)0xFF48)
#define SIO20        (*(volatile __near unsigned char  *)0xFF48)
#define TXD2         (*(volatile __near unsigned char  *)0xFF48)
#define SDR11        (*(volatile __near unsigned short *)0xFF4A)
#define RXD2         (*(volatile __near unsigned char  *)0xFF4A)
#define SIO21        (*(volatile __near unsigned char  *)0xFF4A)
#define IICA0        (*(volatile __near unsigned char  *)0xFF50)
#define IICS0        (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit    (*(volatile __near __bitf_T *)0xFF51)
#define SPD0         (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0         (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0        (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0         (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0         (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0         (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0         (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0        (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0        (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit    (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0      (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0       (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0      (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0        (((volatile __near __bitf_T *)0xFF52)->no7)
#define IICA1        (*(volatile __near unsigned char  *)0xFF54)
#define IICS1        (*(volatile __near unsigned char  *)0xFF55)
#define IICS1_bit    (*(volatile __near __bitf_T *)0xFF55)
#define SPD1         (((volatile __near __bitf_T *)0xFF55)->no0)
#define STD1         (((volatile __near __bitf_T *)0xFF55)->no1)
#define ACKD1        (((volatile __near __bitf_T *)0xFF55)->no2)
#define TRC1         (((volatile __near __bitf_T *)0xFF55)->no3)
#define COI1         (((volatile __near __bitf_T *)0xFF55)->no4)
#define EXC1         (((volatile __near __bitf_T *)0xFF55)->no5)
#define ALD1         (((volatile __near __bitf_T *)0xFF55)->no6)
#define MSTS1        (((volatile __near __bitf_T *)0xFF55)->no7)
#define IICF1        (*(volatile __near unsigned char  *)0xFF56)
#define IICF1_bit    (*(volatile __near __bitf_T *)0xFF56)
#define IICRSV1      (((volatile __near __bitf_T *)0xFF56)->no0)
#define STCEN1       (((volatile __near __bitf_T *)0xFF56)->no1)
#define IICBSY1      (((volatile __near __bitf_T *)0xFF56)->no6)
#define STCF1        (((volatile __near __bitf_T *)0xFF56)->no7)
#define TDR02        (*(volatile __near unsigned short *)0xFF64)
#define TDR03        (*(volatile __near unsigned short *)0xFF66)
#define TDR03L       (*(volatile __near unsigned char  *)0xFF66)
#define TDR03H       (*(volatile __near unsigned char  *)0xFF67)
#define TDR04        (*(volatile __near unsigned short *)0xFF68)
#define TDR05        (*(volatile __near unsigned short *)0xFF6A)
#define TDR06        (*(volatile __near unsigned short *)0xFF6C)
#define TDR07        (*(volatile __near unsigned short *)0xFF6E)
#define TDR10        (*(volatile __near unsigned short *)0xFF70)
#define TDR11        (*(volatile __near unsigned short *)0xFF72)
#define TDR11L       (*(volatile __near unsigned char  *)0xFF72)
#define TDR11H       (*(volatile __near unsigned char  *)0xFF73)
#define TDR12        (*(volatile __near unsigned short *)0xFF74)
#define TDR13        (*(volatile __near unsigned short *)0xFF76)
#define TDR13L       (*(volatile __near unsigned char  *)0xFF76)
#define TDR13H       (*(volatile __near unsigned char  *)0xFF77)
#define TDR14        (*(volatile __near unsigned short *)0xFF78)
#define TDR15        (*(volatile __near unsigned short *)0xFF7A)
#define TDR16        (*(volatile __near unsigned short *)0xFF7C)
#define TDR17        (*(volatile __near unsigned short *)0xFF7E)
#define CMC          (*(volatile __near unsigned char  *)0xFFA0)
#define CSC          (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit      (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP      (((volatile __near __bitf_T *)0xFFA1)->no0)
#define MIOEN        (((volatile __near __bitf_T *)0xFFA1)->no1)
#define XTSTOP       (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP        (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC         (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit     (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS         (*(volatile __near unsigned char  *)0xFFA3)
#define CKC          (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit      (*(volatile __near __bitf_T *)0xFFA4)
#define MCM1         (((volatile __near __bitf_T *)0xFFA4)->no0)
#define MCS1         (((volatile __near __bitf_T *)0xFFA4)->no1)
#define MCM0         (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS          (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS          (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS          (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0         (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit     (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0       (((volatile __near __bitf_T *)0xFFA5)->no7)
#define CKS1         (*(volatile __near unsigned char  *)0xFFA6)
#define CKS1_bit     (*(volatile __near __bitf_T *)0xFFA6)
#define PCLOE1       (((volatile __near __bitf_T *)0xFFA6)->no7)
#define CKSEL        (*(volatile __near unsigned char  *)0xFFA7)
#define CKSEL_bit    (*(volatile __near __bitf_T *)0xFFA7)
#define SELLOSC      (((volatile __near __bitf_T *)0xFFA7)->no0)
#define RESF         (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM         (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit     (*(volatile __near __bitf_T *)0xFFA9)
#define LVD0F        (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVD1F        (((volatile __near __bitf_T *)0xFFA9)->no1)
#define DLVD0F       (((volatile __near __bitf_T *)0xFFA9)->no2)
#define DLVD1F       (((volatile __near __bitf_T *)0xFFA9)->no3)
#define LVISEN       (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS         (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit     (*(volatile __near __bitf_T *)0xFFAA)
#define LVD1SEL      (((volatile __near __bitf_T *)0xFFAA)->no6)
#define LVD1EN       (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE         (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN        (*(volatile __near unsigned char  *)0xFFAC)
#define IF2          (*(volatile __near unsigned short *)0xFFD0)
#define IF2L         (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit     (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H         (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit     (*(volatile __near __bitf_T *)0xFFD1)
#define TMIF05       (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF06       (((volatile __near __bitf_T *)0xFFD0)->no1)
#define TMIF07       (((volatile __near __bitf_T *)0xFFD0)->no2)
#define PIF6         (((volatile __near __bitf_T *)0xFFD0)->no3)
#define PIF7         (((volatile __near __bitf_T *)0xFFD0)->no4)
#define PIF8         (((volatile __near __bitf_T *)0xFFD0)->no5)
#define PIF9         (((volatile __near __bitf_T *)0xFFD0)->no6)
#define FLIF         (((volatile __near __bitf_T *)0xFFD0)->no7)
#define CMPIF0       (((volatile __near __bitf_T *)0xFFD1)->no0)
#define PIF10        (((volatile __near __bitf_T *)0xFFD1)->no0)
#define CMPIF1       (((volatile __near __bitf_T *)0xFFD1)->no1)
#define PIF11        (((volatile __near __bitf_T *)0xFFD1)->no1)
#define TMIF10       (((volatile __near __bitf_T *)0xFFD1)->no2)
#define UREIF0       (((volatile __near __bitf_T *)0xFFD1)->no2)
#define TMIF11       (((volatile __near __bitf_T *)0xFFD1)->no3)
#define UREIF1       (((volatile __near __bitf_T *)0xFFD1)->no3)
#define TMIF12       (((volatile __near __bitf_T *)0xFFD1)->no4)
#define SREIF3       (((volatile __near __bitf_T *)0xFFD1)->no5)
#define TMIF13H      (((volatile __near __bitf_T *)0xFFD1)->no5)
#define CTSUWRIF     (((volatile __near __bitf_T *)0xFFD1)->no6)
#define IICAIF1      (((volatile __near __bitf_T *)0xFFD1)->no7)
#define IF3          (*(volatile __near unsigned short *)0xFFD2)
#define IF3L         (*(volatile __near unsigned char  *)0xFFD2)
#define IF3L_bit     (*(volatile __near __bitf_T *)0xFFD2)
#define IF3H         (*(volatile __near unsigned char  *)0xFFD3)
#define IF3H_bit     (*(volatile __near __bitf_T *)0xFFD3)
#define CTSURDIF     (((volatile __near __bitf_T *)0xFFD2)->no0)
#define CTSUFNIF     (((volatile __near __bitf_T *)0xFFD2)->no1)
#define REMCIF       (((volatile __near __bitf_T *)0xFFD2)->no2)
#define UTIF0        (((volatile __near __bitf_T *)0xFFD2)->no3)
#define URIF0        (((volatile __near __bitf_T *)0xFFD2)->no4)
#define UTIF1        (((volatile __near __bitf_T *)0xFFD2)->no5)
#define URIF1        (((volatile __near __bitf_T *)0xFFD2)->no6)
#define TMIF14       (((volatile __near __bitf_T *)0xFFD2)->no7)
#define TMIF15       (((volatile __near __bitf_T *)0xFFD3)->no0)
#define TMIF16       (((volatile __near __bitf_T *)0xFFD3)->no1)
#define TMIF17       (((volatile __near __bitf_T *)0xFFD3)->no2)
#define MK2          (*(volatile __near unsigned short *)0xFFD4)
#define MK2L         (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit     (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H         (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit     (*(volatile __near __bitf_T *)0xFFD5)
#define TMMK05       (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK06       (((volatile __near __bitf_T *)0xFFD4)->no1)
#define TMMK07       (((volatile __near __bitf_T *)0xFFD4)->no2)
#define PMK6         (((volatile __near __bitf_T *)0xFFD4)->no3)
#define PMK7         (((volatile __near __bitf_T *)0xFFD4)->no4)
#define PMK8         (((volatile __near __bitf_T *)0xFFD4)->no5)
#define PMK9         (((volatile __near __bitf_T *)0xFFD4)->no6)
#define FLMK         (((volatile __near __bitf_T *)0xFFD4)->no7)
#define CMPMK0       (((volatile __near __bitf_T *)0xFFD5)->no0)
#define PMK10        (((volatile __near __bitf_T *)0xFFD5)->no0)
#define CMPMK1       (((volatile __near __bitf_T *)0xFFD5)->no1)
#define PMK11        (((volatile __near __bitf_T *)0xFFD5)->no1)
#define TMMK10       (((volatile __near __bitf_T *)0xFFD5)->no2)
#define UREMK0       (((volatile __near __bitf_T *)0xFFD5)->no2)
#define TMMK11       (((volatile __near __bitf_T *)0xFFD5)->no3)
#define UREMK1       (((volatile __near __bitf_T *)0xFFD5)->no3)
#define TMMK12       (((volatile __near __bitf_T *)0xFFD5)->no4)
#define SREMK3       (((volatile __near __bitf_T *)0xFFD5)->no5)
#define TMMK13H      (((volatile __near __bitf_T *)0xFFD5)->no5)
#define CTSUWRMK     (((volatile __near __bitf_T *)0xFFD5)->no6)
#define IICAMK1      (((volatile __near __bitf_T *)0xFFD5)->no7)
#define MK3          (*(volatile __near unsigned short *)0xFFD6)
#define MK3L         (*(volatile __near unsigned char  *)0xFFD6)
#define MK3L_bit     (*(volatile __near __bitf_T *)0xFFD6)
#define MK3H         (*(volatile __near unsigned char  *)0xFFD7)
#define MK3H_bit     (*(volatile __near __bitf_T *)0xFFD7)
#define CTSURDMK     (((volatile __near __bitf_T *)0xFFD6)->no0)
#define CTSUFNMK     (((volatile __near __bitf_T *)0xFFD6)->no1)
#define REMCMK       (((volatile __near __bitf_T *)0xFFD6)->no2)
#define UTMK0        (((volatile __near __bitf_T *)0xFFD6)->no3)
#define URMK0        (((volatile __near __bitf_T *)0xFFD6)->no4)
#define UTMK1        (((volatile __near __bitf_T *)0xFFD6)->no5)
#define URMK1        (((volatile __near __bitf_T *)0xFFD6)->no6)
#define TMMK14       (((volatile __near __bitf_T *)0xFFD6)->no7)
#define TMMK15       (((volatile __near __bitf_T *)0xFFD7)->no0)
#define TMMK16       (((volatile __near __bitf_T *)0xFFD7)->no1)
#define TMMK17       (((volatile __near __bitf_T *)0xFFD7)->no2)
#define PR02         (*(volatile __near unsigned short *)0xFFD8)
#define PR02L        (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit    (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H        (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit    (*(volatile __near __bitf_T *)0xFFD9)
#define TMPR005      (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR006      (((volatile __near __bitf_T *)0xFFD8)->no1)
#define TMPR007      (((volatile __near __bitf_T *)0xFFD8)->no2)
#define PPR06        (((volatile __near __bitf_T *)0xFFD8)->no3)
#define PPR07        (((volatile __near __bitf_T *)0xFFD8)->no4)
#define PPR08        (((volatile __near __bitf_T *)0xFFD8)->no5)
#define PPR09        (((volatile __near __bitf_T *)0xFFD8)->no6)
#define FLPR0        (((volatile __near __bitf_T *)0xFFD8)->no7)
#define CMPPR00      (((volatile __near __bitf_T *)0xFFD9)->no0)
#define PPR010       (((volatile __near __bitf_T *)0xFFD9)->no0)
#define CMPPR01      (((volatile __near __bitf_T *)0xFFD9)->no1)
#define PPR011       (((volatile __near __bitf_T *)0xFFD9)->no1)
#define TMPR010      (((volatile __near __bitf_T *)0xFFD9)->no2)
#define UREPR00      (((volatile __near __bitf_T *)0xFFD9)->no2)
#define TMPR011      (((volatile __near __bitf_T *)0xFFD9)->no3)
#define UREPR01      (((volatile __near __bitf_T *)0xFFD9)->no3)
#define TMPR012      (((volatile __near __bitf_T *)0xFFD9)->no4)
#define SREPR03      (((volatile __near __bitf_T *)0xFFD9)->no5)
#define TMPR013H     (((volatile __near __bitf_T *)0xFFD9)->no5)
#define CTSUWRPR0    (((volatile __near __bitf_T *)0xFFD9)->no6)
#define IICAPR01     (((volatile __near __bitf_T *)0xFFD9)->no7)
#define PR03         (*(volatile __near unsigned short *)0xFFDA)
#define PR03L        (*(volatile __near unsigned char  *)0xFFDA)
#define PR03L_bit    (*(volatile __near __bitf_T *)0xFFDA)
#define PR03H        (*(volatile __near unsigned char  *)0xFFDB)
#define PR03H_bit    (*(volatile __near __bitf_T *)0xFFDB)
#define CTSURDPR0    (((volatile __near __bitf_T *)0xFFDA)->no0)
#define CTSUFNPR0    (((volatile __near __bitf_T *)0xFFDA)->no1)
#define REMCPR0      (((volatile __near __bitf_T *)0xFFDA)->no2)
#define UTPR00       (((volatile __near __bitf_T *)0xFFDA)->no3)
#define URPR00       (((volatile __near __bitf_T *)0xFFDA)->no4)
#define UTPR01       (((volatile __near __bitf_T *)0xFFDA)->no5)
#define URPR01       (((volatile __near __bitf_T *)0xFFDA)->no6)
#define TMPR014      (((volatile __near __bitf_T *)0xFFDA)->no7)
#define TMPR015      (((volatile __near __bitf_T *)0xFFDB)->no0)
#define TMPR016      (((volatile __near __bitf_T *)0xFFDB)->no1)
#define TMPR017      (((volatile __near __bitf_T *)0xFFDB)->no2)
#define PR12         (*(volatile __near unsigned short *)0xFFDC)
#define PR12L        (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit    (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H        (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit    (*(volatile __near __bitf_T *)0xFFDD)
#define TMPR105      (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR106      (((volatile __near __bitf_T *)0xFFDC)->no1)
#define TMPR107      (((volatile __near __bitf_T *)0xFFDC)->no2)
#define PPR16        (((volatile __near __bitf_T *)0xFFDC)->no3)
#define PPR17        (((volatile __near __bitf_T *)0xFFDC)->no4)
#define PPR18        (((volatile __near __bitf_T *)0xFFDC)->no5)
#define PPR19        (((volatile __near __bitf_T *)0xFFDC)->no6)
#define FLPR1        (((volatile __near __bitf_T *)0xFFDC)->no7)
#define CMPPR10      (((volatile __near __bitf_T *)0xFFDD)->no0)
#define PPR110       (((volatile __near __bitf_T *)0xFFDD)->no0)
#define CMPPR11      (((volatile __near __bitf_T *)0xFFDD)->no1)
#define PPR111       (((volatile __near __bitf_T *)0xFFDD)->no1)
#define TMPR110      (((volatile __near __bitf_T *)0xFFDD)->no2)
#define UREPR10      (((volatile __near __bitf_T *)0xFFDD)->no2)
#define TMPR111      (((volatile __near __bitf_T *)0xFFDD)->no3)
#define UREPR11      (((volatile __near __bitf_T *)0xFFDD)->no3)
#define TMPR112      (((volatile __near __bitf_T *)0xFFDD)->no4)
#define SREPR13      (((volatile __near __bitf_T *)0xFFDD)->no5)
#define TMPR113H     (((volatile __near __bitf_T *)0xFFDD)->no5)
#define CTSUWRPR1    (((volatile __near __bitf_T *)0xFFDD)->no6)
#define IICAPR11     (((volatile __near __bitf_T *)0xFFDD)->no7)
#define PR13         (*(volatile __near unsigned short *)0xFFDE)
#define PR13L        (*(volatile __near unsigned char  *)0xFFDE)
#define PR13L_bit    (*(volatile __near __bitf_T *)0xFFDE)
#define PR13H        (*(volatile __near unsigned char  *)0xFFDF)
#define PR13H_bit    (*(volatile __near __bitf_T *)0xFFDF)
#define CTSURDPR1    (((volatile __near __bitf_T *)0xFFDE)->no0)
#define CTSUFNPR1    (((volatile __near __bitf_T *)0xFFDE)->no1)
#define REMCPR1      (((volatile __near __bitf_T *)0xFFDE)->no2)
#define UTPR10       (((volatile __near __bitf_T *)0xFFDE)->no3)
#define URPR10       (((volatile __near __bitf_T *)0xFFDE)->no4)
#define UTPR11       (((volatile __near __bitf_T *)0xFFDE)->no5)
#define URPR11       (((volatile __near __bitf_T *)0xFFDE)->no6)
#define TMPR114      (((volatile __near __bitf_T *)0xFFDE)->no7)
#define TMPR115      (((volatile __near __bitf_T *)0xFFDF)->no0)
#define TMPR116      (((volatile __near __bitf_T *)0xFFDF)->no1)
#define TMPR117      (((volatile __near __bitf_T *)0xFFDF)->no2)
#define IF0          (*(volatile __near unsigned short *)0xFFE0)
#define IF0L         (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit     (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H         (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit     (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF       (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF        (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0         (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1         (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2         (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3         (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4         (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5         (((volatile __near __bitf_T *)0xFFE0)->no7)
#define CSIIF20      (((volatile __near __bitf_T *)0xFFE1)->no0)
#define IICIF20      (((volatile __near __bitf_T *)0xFFE1)->no0)
#define STIF2        (((volatile __near __bitf_T *)0xFFE1)->no0)
#define CSIIF21      (((volatile __near __bitf_T *)0xFFE1)->no1)
#define IICIF21      (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SRIF2        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SREIF2       (((volatile __near __bitf_T *)0xFFE1)->no2)
#define TMIF11H      (((volatile __near __bitf_T *)0xFFE1)->no2)
#define ELCLIF       (((volatile __near __bitf_T *)0xFFE1)->no3)
#define SMSEIF       (((volatile __near __bitf_T *)0xFFE1)->no4)
#define CSIIF00      (((volatile __near __bitf_T *)0xFFE1)->no5)
#define IICIF00      (((volatile __near __bitf_T *)0xFFE1)->no5)
#define STIF0        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define TMIF00       (((volatile __near __bitf_T *)0xFFE1)->no6)
#define SREIF0       (((volatile __near __bitf_T *)0xFFE1)->no7)
#define TMIF01H      (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1          (*(volatile __near unsigned short *)0xFFE2)
#define IF1L         (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit     (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H         (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit     (*(volatile __near __bitf_T *)0xFFE3)
#define CSIIF10      (((volatile __near __bitf_T *)0xFFE2)->no0)
#define IICIF10      (((volatile __near __bitf_T *)0xFFE2)->no0)
#define STIF1        (((volatile __near __bitf_T *)0xFFE2)->no0)
#define CSIIF11      (((volatile __near __bitf_T *)0xFFE2)->no1)
#define IICIF11      (((volatile __near __bitf_T *)0xFFE2)->no1)
#define SRIF1        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define SREIF1       (((volatile __near __bitf_T *)0xFFE2)->no2)
#define TMIF03H      (((volatile __near __bitf_T *)0xFFE2)->no2)
#define IICAIF0      (((volatile __near __bitf_T *)0xFFE2)->no3)
#define CSIIF01      (((volatile __near __bitf_T *)0xFFE2)->no4)
#define IICIF01      (((volatile __near __bitf_T *)0xFFE2)->no4)
#define SRIF0        (((volatile __near __bitf_T *)0xFFE2)->no4)
#define TMIF01       (((volatile __near __bitf_T *)0xFFE2)->no5)
#define TMIF02       (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF03       (((volatile __near __bitf_T *)0xFFE2)->no7)
#define ADIF         (((volatile __near __bitf_T *)0xFFE3)->no0)
#define RTCIF        (((volatile __near __bitf_T *)0xFFE3)->no1)
#define ITLIF        (((volatile __near __bitf_T *)0xFFE3)->no2)
#define KRIF         (((volatile __near __bitf_T *)0xFFE3)->no3)
#define CSIIF30      (((volatile __near __bitf_T *)0xFFE3)->no4)
#define IICIF30      (((volatile __near __bitf_T *)0xFFE3)->no4)
#define STIF3        (((volatile __near __bitf_T *)0xFFE3)->no4)
#define CSIIF31      (((volatile __near __bitf_T *)0xFFE3)->no5)
#define IICIF31      (((volatile __near __bitf_T *)0xFFE3)->no5)
#define SRIF3        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define TMIF13       (((volatile __near __bitf_T *)0xFFE3)->no6)
#define TMIF04       (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0          (*(volatile __near unsigned short *)0xFFE4)
#define MK0L         (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit     (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H         (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit     (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK       (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK        (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0         (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1         (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2         (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3         (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4         (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5         (((volatile __near __bitf_T *)0xFFE4)->no7)
#define CSIMK20      (((volatile __near __bitf_T *)0xFFE5)->no0)
#define IICMK20      (((volatile __near __bitf_T *)0xFFE5)->no0)
#define STMK2        (((volatile __near __bitf_T *)0xFFE5)->no0)
#define CSIMK21      (((volatile __near __bitf_T *)0xFFE5)->no1)
#define IICMK21      (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SRMK2        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SREMK2       (((volatile __near __bitf_T *)0xFFE5)->no2)
#define TMMK11H      (((volatile __near __bitf_T *)0xFFE5)->no2)
#define ELCLMK       (((volatile __near __bitf_T *)0xFFE5)->no3)
#define SMSEMK       (((volatile __near __bitf_T *)0xFFE5)->no4)
#define CSIMK00      (((volatile __near __bitf_T *)0xFFE5)->no5)
#define IICMK00      (((volatile __near __bitf_T *)0xFFE5)->no5)
#define STMK0        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define TMMK00       (((volatile __near __bitf_T *)0xFFE5)->no6)
#define SREMK0       (((volatile __near __bitf_T *)0xFFE5)->no7)
#define TMMK01H      (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1          (*(volatile __near unsigned short *)0xFFE6)
#define MK1L         (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit     (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H         (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit     (*(volatile __near __bitf_T *)0xFFE7)
#define CSIMK10      (((volatile __near __bitf_T *)0xFFE6)->no0)
#define IICMK10      (((volatile __near __bitf_T *)0xFFE6)->no0)
#define STMK1        (((volatile __near __bitf_T *)0xFFE6)->no0)
#define CSIMK11      (((volatile __near __bitf_T *)0xFFE6)->no1)
#define IICMK11      (((volatile __near __bitf_T *)0xFFE6)->no1)
#define SRMK1        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define SREMK1       (((volatile __near __bitf_T *)0xFFE6)->no2)
#define TMMK03H      (((volatile __near __bitf_T *)0xFFE6)->no2)
#define IICAMK0      (((volatile __near __bitf_T *)0xFFE6)->no3)
#define CSIMK01      (((volatile __near __bitf_T *)0xFFE6)->no4)
#define IICMK01      (((volatile __near __bitf_T *)0xFFE6)->no4)
#define SRMK0        (((volatile __near __bitf_T *)0xFFE6)->no4)
#define TMMK01       (((volatile __near __bitf_T *)0xFFE6)->no5)
#define TMMK02       (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK03       (((volatile __near __bitf_T *)0xFFE6)->no7)
#define ADMK         (((volatile __near __bitf_T *)0xFFE7)->no0)
#define RTCMK        (((volatile __near __bitf_T *)0xFFE7)->no1)
#define ITLMK        (((volatile __near __bitf_T *)0xFFE7)->no2)
#define KRMK         (((volatile __near __bitf_T *)0xFFE7)->no3)
#define CSIMK30      (((volatile __near __bitf_T *)0xFFE7)->no4)
#define IICMK30      (((volatile __near __bitf_T *)0xFFE7)->no4)
#define STMK3        (((volatile __near __bitf_T *)0xFFE7)->no4)
#define CSIMK31      (((volatile __near __bitf_T *)0xFFE7)->no5)
#define IICMK31      (((volatile __near __bitf_T *)0xFFE7)->no5)
#define SRMK3        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define TMMK13       (((volatile __near __bitf_T *)0xFFE7)->no6)
#define TMMK04       (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00         (*(volatile __near unsigned short *)0xFFE8)
#define PR00L        (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit    (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H        (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit    (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0      (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0       (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00        (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01        (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02        (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03        (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04        (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05        (((volatile __near __bitf_T *)0xFFE8)->no7)
#define CSIPR020     (((volatile __near __bitf_T *)0xFFE9)->no0)
#define IICPR020     (((volatile __near __bitf_T *)0xFFE9)->no0)
#define STPR02       (((volatile __near __bitf_T *)0xFFE9)->no0)
#define CSIPR021     (((volatile __near __bitf_T *)0xFFE9)->no1)
#define IICPR021     (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SRPR02       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SREPR02      (((volatile __near __bitf_T *)0xFFE9)->no2)
#define TMPR011H     (((volatile __near __bitf_T *)0xFFE9)->no2)
#define ELCLPR0      (((volatile __near __bitf_T *)0xFFE9)->no3)
#define SMSEPR0      (((volatile __near __bitf_T *)0xFFE9)->no4)
#define CSIPR000     (((volatile __near __bitf_T *)0xFFE9)->no5)
#define IICPR000     (((volatile __near __bitf_T *)0xFFE9)->no5)
#define STPR00       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define TMPR000      (((volatile __near __bitf_T *)0xFFE9)->no6)
#define SREPR00      (((volatile __near __bitf_T *)0xFFE9)->no7)
#define TMPR001H     (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01         (*(volatile __near unsigned short *)0xFFEA)
#define PR01L        (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit    (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H        (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit    (*(volatile __near __bitf_T *)0xFFEB)
#define CSIPR010     (((volatile __near __bitf_T *)0xFFEA)->no0)
#define IICPR010     (((volatile __near __bitf_T *)0xFFEA)->no0)
#define STPR01       (((volatile __near __bitf_T *)0xFFEA)->no0)
#define CSIPR011     (((volatile __near __bitf_T *)0xFFEA)->no1)
#define IICPR011     (((volatile __near __bitf_T *)0xFFEA)->no1)
#define SRPR01       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define SREPR01      (((volatile __near __bitf_T *)0xFFEA)->no2)
#define TMPR003H     (((volatile __near __bitf_T *)0xFFEA)->no2)
#define IICAPR00     (((volatile __near __bitf_T *)0xFFEA)->no3)
#define CSIPR001     (((volatile __near __bitf_T *)0xFFEA)->no4)
#define IICPR001     (((volatile __near __bitf_T *)0xFFEA)->no4)
#define SRPR00       (((volatile __near __bitf_T *)0xFFEA)->no4)
#define TMPR001      (((volatile __near __bitf_T *)0xFFEA)->no5)
#define TMPR002      (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR003      (((volatile __near __bitf_T *)0xFFEA)->no7)
#define ADPR0        (((volatile __near __bitf_T *)0xFFEB)->no0)
#define RTCPR0       (((volatile __near __bitf_T *)0xFFEB)->no1)
#define ITLPR0       (((volatile __near __bitf_T *)0xFFEB)->no2)
#define KRPR0        (((volatile __near __bitf_T *)0xFFEB)->no3)
#define CSIPR030     (((volatile __near __bitf_T *)0xFFEB)->no4)
#define IICPR030     (((volatile __near __bitf_T *)0xFFEB)->no4)
#define STPR03       (((volatile __near __bitf_T *)0xFFEB)->no4)
#define CSIPR031     (((volatile __near __bitf_T *)0xFFEB)->no5)
#define IICPR031     (((volatile __near __bitf_T *)0xFFEB)->no5)
#define SRPR03       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define TMPR013      (((volatile __near __bitf_T *)0xFFEB)->no6)
#define TMPR004      (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10         (*(volatile __near unsigned short *)0xFFEC)
#define PR10L        (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit    (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H        (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit    (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1      (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1       (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10        (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11        (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12        (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13        (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14        (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15        (((volatile __near __bitf_T *)0xFFEC)->no7)
#define CSIPR120     (((volatile __near __bitf_T *)0xFFED)->no0)
#define IICPR120     (((volatile __near __bitf_T *)0xFFED)->no0)
#define STPR12       (((volatile __near __bitf_T *)0xFFED)->no0)
#define CSIPR121     (((volatile __near __bitf_T *)0xFFED)->no1)
#define IICPR121     (((volatile __near __bitf_T *)0xFFED)->no1)
#define SRPR12       (((volatile __near __bitf_T *)0xFFED)->no1)
#define SREPR12      (((volatile __near __bitf_T *)0xFFED)->no2)
#define TMPR111H     (((volatile __near __bitf_T *)0xFFED)->no2)
#define ELCLPR1      (((volatile __near __bitf_T *)0xFFED)->no3)
#define SMSEPR1      (((volatile __near __bitf_T *)0xFFED)->no4)
#define CSIPR100     (((volatile __near __bitf_T *)0xFFED)->no5)
#define IICPR100     (((volatile __near __bitf_T *)0xFFED)->no5)
#define STPR10       (((volatile __near __bitf_T *)0xFFED)->no5)
#define TMPR100      (((volatile __near __bitf_T *)0xFFED)->no6)
#define SREPR10      (((volatile __near __bitf_T *)0xFFED)->no7)
#define TMPR101H     (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11         (*(volatile __near unsigned short *)0xFFEE)
#define PR11L        (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit    (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H        (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit    (*(volatile __near __bitf_T *)0xFFEF)
#define CSIPR110     (((volatile __near __bitf_T *)0xFFEE)->no0)
#define IICPR110     (((volatile __near __bitf_T *)0xFFEE)->no0)
#define STPR11       (((volatile __near __bitf_T *)0xFFEE)->no0)
#define CSIPR111     (((volatile __near __bitf_T *)0xFFEE)->no1)
#define IICPR111     (((volatile __near __bitf_T *)0xFFEE)->no1)
#define SRPR11       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define SREPR11      (((volatile __near __bitf_T *)0xFFEE)->no2)
#define TMPR103H     (((volatile __near __bitf_T *)0xFFEE)->no2)
#define IICAPR10     (((volatile __near __bitf_T *)0xFFEE)->no3)
#define CSIPR101     (((volatile __near __bitf_T *)0xFFEE)->no4)
#define IICPR101     (((volatile __near __bitf_T *)0xFFEE)->no4)
#define SRPR10       (((volatile __near __bitf_T *)0xFFEE)->no4)
#define TMPR101      (((volatile __near __bitf_T *)0xFFEE)->no5)
#define TMPR102      (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR103      (((volatile __near __bitf_T *)0xFFEE)->no7)
#define ADPR1        (((volatile __near __bitf_T *)0xFFEF)->no0)
#define RTCPR1       (((volatile __near __bitf_T *)0xFFEF)->no1)
#define ITLPR1       (((volatile __near __bitf_T *)0xFFEF)->no2)
#define KRPR1        (((volatile __near __bitf_T *)0xFFEF)->no3)
#define CSIPR130     (((volatile __near __bitf_T *)0xFFEF)->no4)
#define IICPR130     (((volatile __near __bitf_T *)0xFFEF)->no4)
#define STPR13       (((volatile __near __bitf_T *)0xFFEF)->no4)
#define CSIPR131     (((volatile __near __bitf_T *)0xFFEF)->no5)
#define IICPR131     (((volatile __near __bitf_T *)0xFFEF)->no5)
#define SRPR13       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define TMPR113      (((volatile __near __bitf_T *)0xFFEF)->no6)
#define TMPR104      (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MACRL        (*(volatile __near unsigned short *)0xFFF0)
#define MACRH        (*(volatile __near unsigned short *)0xFFF2)
#define PMC          (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit      (*(volatile __near __bitf_T *)0xFFFE)
#define MAA          (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTCSI20                        0x0014
#define INTIIC20                        0x0014
#define INTST2                          0x0014
#define INTCSI21                        0x0016
#define INTIIC21                        0x0016
#define INTSR2                          0x0016
#define INTSRE2                         0x0018
#define INTTM11H                        0x0018
#define INTELCL                         0x001A
#define INTSMSE                         0x001C
#define INTCSI00                        0x001E
#define INTIIC00                        0x001E
#define INTST0                          0x001E
#define INTTM00                         0x0020
#define INTSRE0                         0x0022
#define INTTM01H                        0x0022
#define INTCSI10                        0x0024
#define INTIIC10                        0x0024
#define INTST1                          0x0024
#define INTCSI11                        0x0026
#define INTIIC11                        0x0026
#define INTSR1                          0x0026
#define INTSRE1                         0x0028
#define INTTM03H                        0x0028
#define INTIICA0                        0x002A
#define INTCSI01                        0x002C
#define INTIIC01                        0x002C
#define INTSR0                          0x002C
#define INTTM01                         0x002E
#define INTTM02                         0x0030
#define INTTM03                         0x0032
#define INTAD                           0x0034
#define INTRTC                          0x0036
#define INTITL                          0x0038
#define INTKR                           0x003A
#define INTCSI30                        0x003C
#define INTIIC30                        0x003C
#define INTST3                          0x003C
#define INTCSI31                        0x003E
#define INTIIC31                        0x003E
#define INTSR3                          0x003E
#define INTTM13                         0x0040
#define INTTM04                         0x0042
#define INTTM05                         0x0044
#define INTTM06                         0x0046
#define INTTM07                         0x0048
#define INTP6                           0x004A
#define INTP7                           0x004C
#define INTP8                           0x004E
#define INTP9                           0x0050
#define INTFL                           0x0052
#define INTCMP0                         0x0054
#define INTP10                          0x0054
#define INTCMP1                         0x0056
#define INTP11                          0x0056
#define INTTM10                         0x0058
#define INTURE0                         0x0058
#define INTTM11                         0x005A
#define INTURE1                         0x005A
#define INTTM12                         0x005C
#define INTSRE3                         0x005E
#define INTTM13H                        0x005E
#define INTCTSUWR                       0x0060
#define INTIICA1                        0x0062
#define INTCTSURD                       0x0064
#define INTCTSUFN                       0x0066
#define INTREMC                         0x0068
#define INTUT0                          0x006A
#define INTUR0                          0x006C
#define INTUT1                          0x006E
#define INTUR1                          0x0070
#define INTTM14                         0x0072
#define INTTM15                         0x0074
#define INTTM16                         0x0076
#define INTTM17                         0x0078

#endif
